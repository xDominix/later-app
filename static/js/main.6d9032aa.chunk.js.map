{"version":3,"sources":["p-play-room/components/CHand.css","p-play-room/components/local.css","p-play-room/local.css","p-home/Home.css","p-waiting-room/local.css","models/game.js","models/consts.js","context/AccountContext.js","components/InputDialog.js","components/TextDialog.js","context/DialogContext.js","context/NotificationContext.js","context/CodeContext.js","models/random.js","components/MainName.js","p-home/components/GameBox.js","p-home/Home.js","models/cards.js","models/decks.js","p-play-room/components/status.js","p-play-room/components/gamestatus.js","p-play-room/components/CCard.js","p-play-room/components/CHand.js","models/flops.js","p-play-room/components/timer.js","components/Name.js","p-play-room/components/Wave.js","p-play-room/CGame.js","context/DarkModeContext.js","components/Account.js","p-waiting-room/components/RoomList.js","p-waiting-room/WaitingRoom.js","context/OnlineContext.js","components/Online.js","App.js","index.js"],"names":["module","exports","divflex","table","hand","timer","redTimer","gameStatusBody","handtable","wave","sidebar","quit","flex","content","Game","id","name","firstPoint","lastPoint","type","firstRoundTime","arguments","length","undefined","minusRoundTime","Object","classCallCheck","this","handDeckSize","tableDeckSize","points","Array","fill","roundsTime","map","a","i","createClass","key","value","pts","countAllPoints","round","Math","floor","getMaxRounds","GameType","reduce","b","GameSet","games","getGame","getMainGame","getOtherGames","filter","game","codes","0","1","2","3","4","5","6","7","codesValue","imnew","name5","greenwin","herewegoagain","likeaboss","fam50","friends","rules","noToUseCodes","customNames","AccountContext","React","createContext","getLocalNumber","str","localStorage","getItem","setItem","Number","AccountProvider","_ref","children","_useState","useState","_useState2","slicedToArray","balance","setBalance","_useState3","_useState4","xp","setXp","getBalance","chargeBalance","chargeXp","react_default","createElement","Provider","InputDialog","text","onClose","inputRef","useRef","style","zIndex","className","onClick","role","aria-label","margin","maxLength","ref","current","TextDialog","title","bold","marginTop","fontSize","DialogContext","DialogProvider","textDialog","setTextDialog","inputDialog","setInputDialog","isDialog","components_InputDialog","components_TextDialog","NotificationContext","NotificationProvider","useContext","notification","setNotification","isNotification","showNotification","CodeContext","CodeProvider","_useContext2","isCodeDialogOpen","setIsCodeDialogOpen","verifyCode","code","codeId","codeToCodeId","isCodeUsed","includes","isCodeToUse","addUsedCode","useEffect","addCodeToUse","arr","JSON","parse","push","stringify","codeid","keys","find","openCodeDialog","saveCode","description","console","log","tryDeleteCodeUsed","Random","range","random","min","max","getRandom","MainName","_React$Component","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleOnClick","context","setMyName","codeContext","setState","state","inherits","getMyName","Component","contextType","withCodeContext","Consumer","assign","getRandomName","GameBox","main","disabled","dist","textDecoration","position","to","opacity","getRoundTime","Home","_useContext","timeout","setTimeout","clearTimeout","classNames","blured","textAlign","components_MainName","p_home_components_GameBox","Card","color","figure","card","sign","opCard","tableCard","myDelta","abs","opDelta","getColorOfColor","figureToString","colorToString","Color","hearts","clubs","diamonds","spades","Figure","8","9","10","J","Q","K","A","fig","col","HandDeck","size","handDeck","cards","getCards","getRandomHandCards","equal","index","len","getLength","rand","getSize","handdeck","TableDeck","handDeck1","handDeck2","tableDeck","toArray","getRandomTableCards","res","prevFigure","forEach","_loop","temp","getRandomColor","getRandomFigure","_loop2","isCard","Status","status","GameStatus","gameStatus","getStatus","display","flexDirection","point","components_status","CCard","isFlipped","transform","src","getPath","alt","toString","MiniCard","_ref2","isRotate","isChildrenRotate","height","globalStyle","objectWithoutProperties","fontWeight","prepath","process","join","colorToRowNumber","figureToColumnNumber","CHand","initSize","flop","isAcceptable","_ref$show","show","isActive","cardPreview","getCardOpacity","getTranform","toConsumableArray","orders","setOrders","dragItem","dragOverItem","trySwitchOrder","boxid1","boxid2","cardIndex","onDragStart","onDragEnter","onDragEnd","getCard","transition","CCard_CCard","getFlip","CMyHand","_ref3","onAccept","_ref3$show","enterPrice","isExchange","onExchange","toggledCardIndex","setToggledCardIndex","_useState5","_useState6","exchangeAttempts","setExchangeAttempts","_useState7","_useState8","_ref4","border","borderRadius","backgroundColor","left","alignSelf","right","sorted","sort","scard","findIndex","cnt","CTable","_ref5","tableHands","isTableHand","isup","up","down","_","mini","minimini","Flop","flips","getFlips","flip","Timer","sets","onEnd","time","setTime","isRed","setIsRed","isDotted","reset","dotted","interval","startTimer","clearInterval","curr","setInterval","defaultTimer","repeat","Name","apply","myname","getName","Wave","_ref$code","getCardStyle","delta","marginLeft","cardHeight","getDeltaSpace","getBoxWidth","padding","boxPadding","boxHeight","width","c","distance","shift","getDeltaArray","CCard_MiniCard","getEmojiSpan","CGame","_useContext3","_useParams","useParams","myColor","opName","myHandDeck","setMyHandDeck","opHandDeck","setOpHandDeck","setTableDeck","myFlop","setMyFlop","_useState9","_useState10","opFlop","setOpFlop","_useState11","_useState12","tableFlop","setTableFlop","_useState13","_useState14","amIReady","setAmIReady","_useState15","_useState16","isOpReady","setIsOpReady","_useState17","_useState18","setIsAcceptable","_useState19","_useState20","isOpAcceptable","setIsOpAcceptable","_useState21","_useState22","isOpQuit","setIsOpQuit","_useState23","_useState24","myAcceptedIndex","setMyAcceptedIndex","_useState25","_useState26","opAcceptedIndex","setOpAcceptedIndex","opSimulation","_useState27","_useState28","timerSets","setTimerSets","handleTimerEndString","_useState29","_useState30","isShow","setIsShow","_useState31","_useState32","setGameStatus","_useState33","_useState34","setTableHands","_useState35","_useState36","setIsExchange","timeout2","OpReady","New","Copy","showAll","restartTimer","handleOnAccept","endRound","startRoundTimer","getRandomIndex","readyDeckTimer","endRoundTimer","myCard","takeOffCardByIndex","isCloser","isShowAll","showNext","simulateOp","greens","countGreens","myPoints","countPoints","isWin","isDraw","leaveOp","isEndRound","handler","getShow","my","Name_Name","CHand_CHand","CHand_CTable","CHand_CMyHand","components_Wave","getWaveCode","gamestatus","pathname","DarkModeContext","DarkModeProvider","isDarkMode","setIsDarkMode","switchDarkMode","Account","onCharging","_useContext4","currBalance","setCurrBalance","currXp","setCurrXp","isBalanceCharging","setIsBalanceCharging","isXpCharging","setIsXpCharging","isNotificationIcon","setIsNotificationIcon","delting","scale","defaultChecked","ceil","RoomList","gameId","maxRangePrice","toRangePriceFloor","myRangePrice","setMyRangePrice","setMyColor","initList","list","setList","changeList","getRandomRangeIn","whiteSpace","item","toUpperCase","price","getRangePriceIndex","onChange","event","getRangePrice","target","initLength","getInitLength","maxIndex","ListItem","getRandomColorOfColor","getRandomIn","toDelete","getDeleteLength","splice","toAdd","getAddLength","base","pow","log10","maxPrice","s","sqrt","WaitingRoom","components_RoomList","about","consts","OnlineContext","OnlineProvider","getInitTotalPlayers","totalPlayers","setTotalPlayers","initTotalPlayers","getRandomDelta","Online","App","navBarGold","setNavBarGold","context_DialogContext","context_NotificationContext","context_AccountContext","context_CodeContext","src_components_Account","val","context_OnlineContext","react_router_dist","exact","path","element","src_p_home_Home","p_waiting_room_WaitingRoom","p_play_room_CGame","components_Online","ReactDOM","createRoot","document","getElementById","render","StrictMode","context_DarkModeContext","src_App"],"mappings":"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","file":"static/js/main.6d9032aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"divflex\":\"_14GuKWQsysnOigZ38edRyR\",\"table\":\"_3z3b2CYbvBzWXJe28NNKjL\",\"hand\":\"_1DMTE6skffVup0HjbbZkuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"_1M0-VINM6LPFf_yKOukoPY\",\"redTimer\":\"_3swyZaXMINgZdQBpZhgwJO\",\"gameStatusBody\":\"d7VmnFBEOJ4MOj_lq1P4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handtable\":\"_3JbV29M6s4yAaLUmK6pJ48\",\"timer\":\"_2phrPiC4ETAZ3H2y5SU399\",\"wave\":\"_22E46PPA_LtA-NjyubSCul\",\"sidebar\":\"_26dsF5MFHakkuIPLKGYEx_\",\"quit\":\"_32JQs37nP4EGVlyL6Pm8_g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PduyA2x5bVVFm8khD3AjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"I7EojV80RM7Y6VvhWoCRI\"};","export class Game {\r\n  constructor(id,name,firstPoint,lastPoint,type,firstRoundTime=50,minusRoundTime=10) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.handDeckSize = 5;//1-10, hand>=table\r\n    this.tableDeckSize = 5;//1-10, hand>=table\r\n    this.points = new Array(this.tableDeckSize).fill(firstPoint);\r\n    this.points[this.tableDeckSize-1]=lastPoint;\r\n    this.type = type;\r\n\r\n    let roundsTime = new Array(this.tableDeckSize).fill(firstRoundTime);\r\n    roundsTime = roundsTime.map((a,i)=>a-minusRoundTime*i)\r\n    this.roundsTime= roundsTime;//in seconds, must be odd number\r\n\r\n  }\r\n  isWin(pts){return pts>countAllPoints(this.points)/2;}\r\n  isDraw(pts){ return pts===countAllPoints(this.points)/2;}\r\n\r\n  getMaxRounds(){return this.tableDeckSize}\r\n  getRoundTime(round=null){\r\n    if(round===null) return this.roundsTime[Math.floor(this.roundsTime.length/2)]\r\n    if(round<0 || round>=this.getMaxRounds()) return this.roundsTime[0]\r\n    return this.roundsTime[round];\r\n  }\r\n\r\n  about(){\r\n    switch(this.id){\r\n      case 0: return `Main game mode - click and play!\r\n      If you begginer try to bet money carefully.\r\n      The opponent's cards are visible, so try to predict his move.\r\n      During round, you have enough time to think.`;\r\n      case 1: return`1.4 game mode.\r\n      The last round has so much points, so try to save the best card, \"ace up the sleeve\"!\r\n      The opponent's cards are visible. Opponent has to be predictable, is't he?`;\r\n      case 2: return`Hidden game mode.\r\n      The opponent cards are hidden, so you have to look only at your cards.\r\n      During round, you have enough time to think.`;\r\n      case 3:return `Fast game mode.\r\n      Hurry up! During round, you have limited time to think. Do you happen to look at the opponent's cards?`;\r\n      default:return;\r\n    }\r\n  }\r\n}\r\n\r\nexport const GameType = {\r\n  HiddenCards:\"HIDDEN\",\r\n  OpenCards:\"OPEN\",\r\n};\r\n\r\nconst countAllPoints = (points=[])=>{return points.reduce((a, b) => a + b, 0)}","import { Game, GameType } from \"./game\";\r\n\r\nexport const GameSet = {\r\n    games:[\r\n      new Game(0,\"PLAY\",1,3,GameType.OpenCards),\r\n      new Game(1,\"1.4\",1,4,GameType.OpenCards),\r\n      new Game(2,\"HIDDEN\",1,3,GameType.HiddenCards,),\r\n      new Game(3,\"FAST\",1,3,GameType.OpenCards,10,0),\r\n    ],\r\n    getGame:(id)=>GameSet.games[id],\r\n    getMainGame:()=>GameSet.getGame(0),\r\n    getOtherGames:()=>GameSet.games.filter(game=>game.id!==0),\r\n}\r\n\r\nexport const codes={\r\n    0:\"imnew\",\r\n    1:\"name5\",\r\n    2:\"greenwin\",\r\n    3:\"herewegoagain\",\r\n    4:\"likeaboss\",\r\n    5:\"fam50\",\r\n    6:\"friends\",\r\n    7:\"rules\",\r\n    //7:\"777\" //if player win 7 times\r\n}\r\n\r\nexport const codesValue={\r\n    \"imnew\":10,\r\n    \"name5\":5,\r\n    \"greenwin\":10,\r\n    \"herewegoagain\":10,\r\n    \"likeaboss\":7,\r\n    \"fam50\":50,\r\n    \"friends\":50,\r\n    \"rules\":10,\r\n}\r\n\r\nexport const noToUseCodes=[5,6,7]\r\n\r\nexport const customNames=[\r\n    \"Lara Croft\",\r\n    \"ElChapo\",\r\n    \"Airport Hobo\",\r\n    \"Minecraft Steve\",\r\n    \"HarrietThugman\",\r\n    \"Pinball Tables\",\r\n    \"Flack\",\r\n    \"Red Rhino\",\r\n    \"not_james_bond\",\r\n    \"bread_pitt\",\r\n    \"Norma Scock\",\r\n    \"well_endowed\",\r\n    \"averagestudent\",\r\n    \"avo_cuddle\",\r\n    \"Joyful\",\r\n    \"chuck_norris\",\r\n    \"abductedbyaliens\",\r\n    \"Adobo_Ahai\",\r\n    \"Not-Insync\",\r\n    \"heisenberg_blue\",\r\n    \"PaniniHead\",\r\n    \"no_one_cares\",\r\n    \"pixie_dust\",\r\n    \"manic_pi\",\r\n    \"look_mom\",\r\n    \"botaccount\",\r\n    \"QuarQueen\",\r\n    \"Reese_With\",\r\n    \"ReeseWithafork\",\r\n    \"ImageNotUploaded\",\r\n    \"No_Feet_Pics\",\r\n    \"wheretomatoes\",\r\n    \"TequilaBird\",\r\n    \"the_other\",\r\n    \"not you\",\r\n    \"PaintMeLike\",\r\n    \"Hot_Name_Here\",\r\n    \"BasicBeach\",\r\n    \"thot_patrol\",\r\n    \"my_anaconda_does\",\r\n    \"kim_chi\",\r\n    \"username_copied\",\r\n    \"Ariana_Grande\",\r\n    \"defasff\"]","import React, { useState } from \"react\";\r\n\r\nexport const AccountContext = React.createContext();\r\n\r\nconst AccountProvider = ({children}) => {\r\n\r\n    const [balance,setBalance] = useState(getLocalNumber(\"balance\"));\r\n    const [xp,setXp] = useState(getLocalNumber(\"xp\"));\r\n    \r\n    const chargeBalance = (value)=>{\r\n        localStorage.setItem(\"balance\",balance+value);\r\n        setBalance(balance+value);\r\n    }\r\n\r\n    const chargeXp = (value)=>{\r\n        localStorage.setItem(\"xp\",xp+value);\r\n        setXp(xp+value);\r\n    }\r\n\r\n    const value = {\r\n        balance:balance,\r\n        getBalance:()=>{return balance},\r\n        xp:xp,\r\n        chargeBalance:(value)=>chargeBalance(value),\r\n        chargeXp:(value)=>chargeXp(value),\r\n    }\r\n\r\n    return ( \r\n    <AccountContext.Provider value={value}>\r\n        {children}\r\n    </AccountContext.Provider> );\r\n}\r\n\r\nconst getLocalNumber = (str)=>{\r\n    if(!localStorage.getItem(str)) localStorage.setItem(str,0);\r\n    return Number(localStorage.getItem(str));\r\n}\r\n \r\nexport default AccountProvider;","import React from 'react';\r\nimport {useRef} from 'react';\r\nimport \"./Dialog.css\"\r\n\r\nconst InputDialog = ({text,onClose}) => {\r\n\r\n  const inputRef = useRef(\"\");\r\n\r\n  const onSubmit = () =>{\r\n    onClose(inputRef.current.value);\r\n  }\r\n\r\n  return (\r\n    <div >\r\n        \r\n        <div style={{\"zIndex\":100}} className={\"centered dialog-box fade darker-color\"}>\r\n            <button className=\"close-button\" onClick={()=>onClose()}>\r\n              <span role=\"img\" aria-label=\"close\">❌</span>\r\n            </button>\r\n            <div>{text}</div>\r\n            <div style={{\"margin\":\"20px\"}}>\r\n              <input type=\"text\" maxLength=\"15\" ref={inputRef}/>\r\n              <button onClick={onSubmit}>OK!</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default InputDialog;","import React  from 'react';\r\nimport \"./Dialog.css\"\r\n\r\nconst TextDialog = ({title,text,bold,onClose}) => {\r\n\r\n  return (\r\n    <div className=\"fade\">\r\n        <div style={{\"zIndex\":99}} className={\"centered dialog-box darker-color\"}>\r\n            <button className=\"close-button\" onClick={onClose}>\r\n              <span role=\"img\" aria-label=\"close\">❌</span>\r\n            </button>\r\n            <div>{title}</div>\r\n            {text && <div style={{\"marginTop\":\"10px\",fontSize:\"24px\"}}>{text} <b style={{fontSize:\"24px\"}}>{bold}</b></div>}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default TextDialog;","import React, {  useState } from \"react\";\r\nimport InputDialog from \"../components/InputDialog\";\r\nimport TextDialog from \"../components/TextDialog\";\r\n\r\nexport const DialogContext = React.createContext();\r\n\r\nconst DialogProvider = ({children}) => {\r\n\r\n    const [textDialog,setTextDialog] = useState(null);//title text onClose\r\n    const [inputDialog,setInputDialog] = useState(null);//text onClose\r\n\r\n    const handleSetInputDialog=(text,onClose)=>{\r\n        setInputDialog({text:text,onClose:onClose})\r\n    }\r\n\r\n    const handleSetTextDialog=(title,text=null,bold=null)=>{\r\n        setTextDialog({title:title,text:text,bold:bold})\r\n    }\r\n\r\n    const value = {\r\n        textDialog:textDialog,\r\n        setTextDialog:handleSetTextDialog,\r\n        inputDialog:inputDialog,\r\n        setInputDialog:handleSetInputDialog,\r\n        isDialog:inputDialog!==null || textDialog!==null\r\n    }\r\n\r\n    return ( \r\n    <DialogContext.Provider value={value}>\r\n        {children}\r\n        {inputDialog && <InputDialog text={inputDialog.text} onClose={(value) =>{inputDialog.onClose(value);setInputDialog(null);}}/>}\r\n        {textDialog && !inputDialog  && <TextDialog title={textDialog.title} text={textDialog.text} bold={textDialog.bold} onClose={() =>{setTextDialog(null)}}/>}\r\n    </DialogContext.Provider> );\r\n}\r\n \r\nexport default DialogProvider;","import React, { useState } from 'react'\r\nimport { useContext } from 'react';\r\nimport { DialogContext } from './DialogContext';\r\n\r\nexport const NotificationContext = React.createContext();\r\n\r\n//notification center, gaining notifications (notification state)\r\nconst NotificationProvider = ({children})=>\r\n{\r\n    const {setTextDialog} = useContext(DialogContext);\r\n\r\n    const [notification,setNotification] = useState(null);\r\n\r\n    const handleSetNotification = (title,text,bold=null)=>{\r\n        setNotification({title:title,text:text,bold:bold});\r\n    }\r\n\r\n    const handleShowNotification = ()=>{\r\n        setTextDialog(notification.title,notification.text,notification.bold)\r\n        setNotification(null)\r\n    }\r\n\r\n    const value ={\r\n        isNotification:notification!==null,\r\n        setNotification:handleSetNotification,\r\n        showNotification:handleShowNotification,\r\n    }\r\n\r\n    return(\r\n        <NotificationContext.Provider value={value}>\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NotificationProvider;","import React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { codes, codesValue, noToUseCodes } from \"../models/consts\";\r\nimport { AccountContext } from \"./AccountContext\";\r\nimport { DialogContext } from \"./DialogContext\";\r\nimport { NotificationContext } from \"./NotificationContext\";\r\n\r\nexport const CodeContext = React.createContext();\r\n\r\n//usage: see value array\r\nconst CodeProvider = ({children}) => {\r\n\r\n    const {setNotification} = useContext(NotificationContext);\r\n    const {inputDialog,setInputDialog,setTextDialog} = useContext(DialogContext);\r\n    const {chargeBalance} = useContext(AccountContext);\r\n\r\n    const [isCodeDialogOpen,setIsCodeDialogOpen]=useState(null);\r\n\r\n    const verifyCode= (code)=>{\r\n        if(code)\r\n        {\r\n            if(codesValue[code])\r\n            {\r\n                let codeId = codeToCodeId(code);\r\n                if(isCodeUsed(codeId))\r\n                {\r\n                    setTextDialog(\"You already used this code...\")\r\n                } \r\n                else if(!noToUseCodes.includes(Number(codeId)) && !isCodeToUse(codeId) )\r\n                {\r\n                    setTextDialog(\"Are u a cheater?\") \r\n                }\r\n                else\r\n                {\r\n                    addUsedCode(codeId);\r\n                    chargeBalance(codesValue[code]);\r\n                }\r\n            }\r\n            else setTextDialog(\"Unknown code :(\")\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isCodeDialogOpen) setInputDialog(\"Type a secret code:\",verifyCode)\r\n    },[isCodeDialogOpen])\r\n\r\n    const handleOpenCode=()=>{\r\n        if(!isCodeDialogOpen) setIsCodeDialogOpen(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!inputDialog) setIsCodeDialogOpen(false);\r\n    },[inputDialog])\r\n\r\n    const handleSaveCode=(codeId,description)=>{\r\n        if(codes[codeId])\r\n        {\r\n            if(!isCodeToUse(codeId)) addCodeToUse(codeId);\r\n            setNotification(description,\"Use code: \",codes[codeId]);\r\n        }else console.log(\"Save code failed\")\r\n    }\r\n\r\n    const addCodeToUse = (codeId)=>{\r\n        let code = codes[codeId];\r\n        let a = localStorage.getItem(\"codesToUse\");\r\n        let arr = JSON.parse(a);\r\n        if(arr){ arr.push(code); }\r\n        a = arr ? JSON.stringify(arr) : JSON.stringify([code]);\r\n        localStorage.setItem(\"codesToUse\",a);\r\n    }\r\n\r\n    const addUsedCode = (codeId)=>{\r\n        let code = codes[codeId];\r\n        let a = localStorage.getItem(\"usedCodes\");\r\n        let arr = JSON.parse(a);\r\n        if(arr){ arr.push(code); }\r\n        a = arr ? JSON.stringify(arr) : JSON.stringify([code]);\r\n        localStorage.setItem(\"usedCodes\",a);\r\n    }\r\n    \r\n    //const removeFromCodeToUse - narazie niepotrzebne\r\n\r\n    const isCodeToUse = (codeid)=>{//is code in codesToUse\r\n        let a = localStorage.getItem(\"codesToUse\");\r\n        if(!a) return false;\r\n        a = JSON.parse(a);\r\n        return a.includes(codes[codeid])\r\n    }\r\n\r\n    const isCodeUsed= (codeid)=>{//is code in usedCodes\r\n        let a = localStorage.getItem(\"usedCodes\");\r\n        if(!a) return false;\r\n        a = JSON.parse(a);\r\n        return a.includes(codes[codeid])\r\n    }\r\n\r\n    const tryDeleteCodeUsed=(codeid)=>{\r\n        if(!isCodeUsed(codeid))return;\r\n        let a = localStorage.getItem(\"usedCodes\");\r\n        a = JSON.parse(a);\r\n        a = a.filter(id => codeid !== id)\r\n        localStorage.setItem(\"usedCodes\",JSON.stringify(a))\r\n    }\r\n\r\n    const codeToCodeId=(code)=>{\r\n        return Object.keys(codes).find(id => codes[id] === code);\r\n    }\r\n\r\n    const value = {\r\n        isCodeDialogOpen:isCodeDialogOpen,\r\n        openCodeDialog:handleOpenCode,\r\n        saveCode:handleSaveCode,\r\n        isCodeUsed:isCodeUsed,\r\n        tryDeleteCodeUsed:tryDeleteCodeUsed,\r\n    }\r\n\r\n    return ( \r\n        <CodeContext.Provider value={value}>\r\n            {children}\r\n        </CodeContext.Provider> );\r\n}\r\n\r\nexport default CodeProvider","import { customNames } from \"./consts\";\r\n\r\nexport class Random{\r\n\r\n    //return number between 0 - (range-1)\r\n    static getRandom(range){\r\n        return Math.floor(Math.random()*range);\r\n    }\r\n\r\n    static getRandomIn(range){\r\n        return Math.floor(Math.random()*(range+1));\r\n    }\r\n\r\n    static getRandomRange(min,max){\r\n        return min+this.getRandom(max);\r\n    }\r\n\r\n    static getRandomRangeIn(min,max){\r\n        return min+this.getRandom(max+1);\r\n    }\r\n\r\n    static getRandomName(includeCustom=true)\r\n    {\r\n        if(includeCustom && this.getRandom(3)!==1) return customNames[this.getRandom(customNames.length)];\r\n        return \"Player\"+this.getRandom(1000);\r\n    }\r\n\r\n    static getRandomColorOfColor()\r\n    {\r\n        return this.getRandom(2)===0?\"black\":\"red\"\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { Random } from '../models/random';\r\n\r\nclass MainName extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: \"\"};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.setState({name:getMyName()})\r\n    }\r\n\r\n    handleOnClick = ()=>{\r\n        this.context.setInputDialog(\"Change your name\",(name)=>{if(name && name!==\"\")this.setMyName(name)});\r\n    }\r\n\r\n    setMyName = (name)=> {\r\n        if(!localStorage.getItem(\"name\"))\r\n            this.props.codeContext.saveCode(1,\"Congrats you set your name!\")\r\n            \r\n        localStorage.setItem(\"name\",name);\r\n        this.setState({name:name})\r\n    }\r\n\r\n    render()\r\n    { \r\n        return (\r\n            <ins className='underline hoverable' onClick={this.handleOnClick} >{this.state.name}</ins>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\nMainName.contextType = DialogContext;\r\n\r\nexport const withCodeContext = Component => (\r\n    props => (\r\n      <CodeContext.Consumer>\r\n        {context => <Component codeContext={context} {...props} />}\r\n      </CodeContext.Consumer>\r\n    )\r\n  )\r\n\r\nexport default withCodeContext(MainName);\r\n\r\n//local\r\n\r\nconst getMyName= ()=> {\r\n    let name = localStorage.getItem(\"name\");\r\n    if(!name) \r\n    {\r\n        name = Random.getRandomName(false);\r\n    }\r\n\r\n    return name;\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./GameBox.css\"\r\n\r\nconst GameBox = ({game,main,disabled}) => {\r\n\r\n    return ( \r\n        <div className={\"forth-color \"+(main?\"main-box\":\"box\")}>\r\n            \r\n            <Link className={main?\"main-head-font\":\"head-font\"} style={{\"textDecoration\":\"none\",\"position\":\"relative\"}}  to={disabled?\"#\":\"/waiting-room/\"+game.id}>\r\n               \r\n                <div className={\"third-color \"+(main?\"main-head\":\"head\")} style={{opacity:(disabled?\"0.3\":\"1\")}}>\r\n                    {game.name}\r\n                </div>\r\n                {disabled &&<div className='centered'>\r\n                <span role=\"img\" aria-label='lock'>🔒</span>\r\n                </div>}\r\n            </Link>\r\n            <div className={\"foot noselect \" + (main?\"main-foot-font\":\"foot-font\")}>\r\n                <div>{game.points[0]}.{game.points[game.points.length-1]}</div>\r\n                <div>{game.type}</div>\r\n                <div>{game.getRoundTime()}s</div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameBox;","import React, { useContext, useEffect } from 'react';\r\n\r\nimport MainName from '../components/MainName';\r\nimport GameBox from './components/GameBox';\r\n\r\nimport style from \"./Home.css\"\r\nimport { NotificationContext } from '../context/NotificationContext';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport classNames from 'classnames';\r\nimport { GameSet } from '../models/consts';\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport { AccountContext } from '../context/AccountContext';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const {isNotification,showNotification} = useContext(NotificationContext);\r\n    const {saveCode,isCodeUsed,tryDeleteCodeUsed} = useContext(CodeContext);\r\n    const {isDialog} = useContext(DialogContext);\r\n    const {balance} = useContext(AccountContext);\r\n\r\n    useEffect(()=>{\r\n        let timeout = setTimeout(() => {\r\n\r\n            if(!isCodeUsed(0)) saveCode(0,\"Hello new player! Ready to start?\");\r\n            else if(balance===0)\r\n            {\r\n                tryDeleteCodeUsed(3) \r\n                saveCode(3,\"You broke, ah... here we go again...\");\r\n            }\r\n        \r\n        }, 5000);\r\n        return ()=>clearTimeout(timeout);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isNotification){\r\n            let timeout = setTimeout(()=>showNotification(),1000);\r\n            return ()=>clearTimeout(timeout)\r\n        } \r\n    },[isNotification])\r\n\r\n    return (\r\n    <div>\r\n        <div className={\"blurable fade \" +classNames({\"blured\":isDialog})}>\r\n        <h1 style={{'textAlign':'center',marginTop:\"70px\"}} >Hello,<MainName/>!</h1>\r\n        \r\n        <div className={style.flex}>\r\n            <div>\r\n                <GameBox disabled={balance<=0} game={GameSet.getMainGame()} main />\r\n            </div>\r\n            \r\n            <div>\r\n                {GameSet.getOtherGames().map((game,i)=>\r\n                    <GameBox key={i} disabled={balance<15} game={game}/>\r\n                    )}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default Home;","export class Card {\r\n    constructor(color,figure) { \r\n      this.color = color;\r\n      this.figure = figure;\r\n    }\r\n\r\n    equal(card){\r\n      return this.color===card.color && this.figure === card.figure;\r\n    }\r\n    isHigher(card){\r\n      return this.figure > card.figure;\r\n    }\r\n\r\n    //index: -1-down , 0-equal, 1-up\r\n    deuIndex(card){\r\n      return Math.sign(this.figure-card.figure);\r\n    }\r\n\r\n    isCloser(opCard,tableCard)\r\n    {\r\n      let myDelta = Math.abs(this.figure-tableCard.figure);\r\n      let opDelta = Math.abs(opCard.figure-tableCard.figure)\r\n      if(myDelta < opDelta) return true;\r\n      if(myDelta > opDelta) return false;\r\n\r\n      return tableCard.getColorOfColor() === this.getColorOfColor();\r\n    }\r\n    \r\n    getColorOfColor() {\r\n      if(this.color===\"hearts\" || this.color===\"diamonds\") return \"red\"\r\n      return \"black\"\r\n    }\r\n    toString() { return figureToString(this.figure) +\" of \"+ colorToString(this.color); }\r\n    toStringColor() { return colorToString(this.color); }\r\n    toStringFigure() { return figureToString(this.figure); }\r\n}\r\n\r\n//rzutowanie - string\r\nexport const Color = {\r\n    hearts:\"hearts\",\r\n    clubs:\"clubs\",\r\n    diamonds:\"diamonds\",\r\n    spades:\"spades\",\r\n}\r\n\r\n//rzutowanie - porownaniowo latwe\r\nexport const Figure = {\r\n    2:2,\r\n    3:3,\r\n    4:4,\r\n    5:5,\r\n    6:6,\r\n    7:7,\r\n    8:8,\r\n    9:9,\r\n    10:10,\r\n    J:11,\r\n    Q:12,\r\n    K:13,\r\n    A:14,\r\n}\r\n\r\n//local utilities\r\nconst figureToString = (fig)=>{\r\n  switch(fig)\r\n  {\r\n      case Figure[2]: return \"2\";\r\n      case Figure[3]: return \"3\";\r\n      case Figure[4]: return \"4\";\r\n      case Figure[5]: return \"5\";\r\n      case Figure[6]: return \"6\";\r\n      case Figure[7]: return \"7\";\r\n      case Figure[8]: return \"8\";\r\n      case Figure[9]: return \"9\";\r\n      case Figure[10]: return \"10\";\r\n      case Figure.J: return \"jack\";\r\n      case Figure.Q: return \"queen\";\r\n      case Figure.K: return \"king\";\r\n      case Figure.A: return \"ace\";\r\n      default: return \"\";\r\n  }\r\n}\r\n\r\nconst colorToString = (col)=>{\r\n  switch(col)\r\n  {\r\n      case Color.hearts: return \"Hearts\";\r\n      case Color.clubs: return \"Clubs\";\r\n      case Color.diamonds: return \"Diamonds\";\r\n      case Color.spades:return \"Spades\";\r\n      default: return \"\";\r\n  }\r\n}","import { Card, Color, Figure } from \"./cards\";\r\n\r\nexport class HandDeck //ex. [card, card, null, null, card]\r\n{\r\n  constructor(size,color,handDeck)//tego nie uzywamy\r\n  {\r\n    this.cards = !handDeck ? getRandomHandCards(size,color) : handDeck.getCards();\r\n  }\r\n\r\n  static New(size,color){\r\n    return new HandDeck(size,color,null);\r\n  }\r\n\r\n  static Copy(handdeck){\r\n    return new HandDeck(null,null,handdeck);\r\n  }\r\n\r\n  //cards\r\n  getCard(id){return this.cards[id];}\r\n  getCards(){return this.cards;}\r\n  isCard(card){return this.cards.filter(a=>a.equal(card)).length !== 0}\r\n  takeOffCardByIndex(index){\r\n    this.cards[index]= null;\r\n    return this;\r\n  }\r\n  getLength(){return this.getCards().filter(a=>a!==null).length}\r\n  getSize(){return this.cards.length;}\r\n  \r\n  //\r\n  getRandomIndex(){\r\n    //random number\r\n    let len=this.getLength();\r\n    if(len===0){console.log(\"wrong use\");return -1;}\r\n\r\n    let rand = getRandom(len);\r\n\r\n    for(let index =0;index<this.getSize();index++)\r\n    {\r\n      if(this.cards[index]!==null) \r\n      {\r\n        if(rand===0) return index;\r\n        rand--;\r\n      }\r\n    }\r\n    console.log(\"wrong use\");\r\n    return -1;\r\n  }\r\n}\r\n\r\nexport class TableDeck\r\n{\r\n  constructor(size,handDeck1,handDeck2,tableDeck)\r\n  {\r\n    this.cards = !tableDeck ? getRandomTableCards(size,handDeck1,handDeck2) : this.cards = tableDeck.toArray();\r\n  }\r\n\r\n  static New(size,handDeck1,handDeck2){\r\n    return new TableDeck(size,handDeck1,handDeck2,null);\r\n  }\r\n\r\n  static Copy(tableDeck){\r\n    return new TableDeck(null,null,null,tableDeck);\r\n  }\r\n\r\n  getCard(id){return this.cards[id];}\r\n  getCards(){return this.cards;}\r\n  getSize(){return this.cards.length;}\r\n  \r\n  getWaveCode()\r\n  {\r\n    let res = new Array(this.cards.length-1);\r\n    \r\n    let prevFigure=null;\r\n    this.cards.forEach((card,i) => {\r\n      if(prevFigure!==null) \r\n      {\r\n        if(card.figure===prevFigure) res[i-1]=null;\r\n        else res[i-1] = card.figure-prevFigure>0;\r\n      }\r\n      prevFigure=card.figure;\r\n    });\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\n//local\r\nvar getRandomHandCards = function(size,color)\r\n{\r\n  if(size>= Figure.length * Color.length) {console.log(\"size too high\");return [];}\r\n\r\n  let res = [];\r\n  while(res.length !== size)\r\n  {\r\n    let temp = new Card(getRandomColor(color),getRandomFigure());\r\n    if(res.filter((card)=>card.equal(temp)).length===0) res.push(temp);\r\n  }\r\n  return res;\r\n}\r\n\r\nvar getRandomTableCards = function(size,handDeck1,handDeck2)\r\n{\r\n  if(size>= Figure.length * Color.length) {console.log(\"size too high\");return [];}\r\n\r\n  let res = [];\r\n  while(res.length !== size)\r\n  {\r\n    let temp = new Card(getRandomColor(),getRandomFigure());\r\n    if(res.filter((card)=>card.equal(temp)).length===0 && !handDeck1.isCard(temp) && !handDeck2.isCard(temp)) \r\n    {\r\n      res.push(temp);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nconst getRandom =(range)=>{//return number between 0 - (range-1)\r\n  return Math.floor(Math.random()*range);\r\n}\r\n\r\n//local of local\r\n\r\nvar getRandomFigure = function () {\r\n  var keys = Object.keys(Figure);\r\n  return Figure[keys[ keys.length * Math.random() << 0]];\r\n};\r\n\r\nvar getRandomColor = function (color=null) {//red or black colors\r\n  if(color ) return (Math.floor(Math.random()*2)===0)? (color===\"red\"?\"hearts\":\"clubs\"):(color===\"red\"?\"diamonds\":\"spades\")\r\n  \r\n  var keys = Object.keys(Color).filter(key=>color? Color[key]===color:true);\r\n  let a = Color[keys[ keys.length * Math.random() << 0]];\r\n  return a;\r\n};\r\n\r\n\r\n/* OLD CLASS DECK - maybe willlll be usefull\r\n\r\nexport class Deck {\r\n    constructor(redDeck,blackDeck) {//custom initialize deck | Deck = FullDeck - deck1 - deck2\r\n      this.cards = [];\r\n\r\n      let card;\r\n      for (const color of Object.keys(Color))\r\n      {\r\n        if(color === \"Red\")\r\n        {\r\n          for (const figure of Object.keys(Figure)) \r\n          {\r\n            card=new Card(color,figure);\r\n            if(!redDeck.includes(card)) this.cards.push(card);\r\n          }\r\n        }\r\n        else\r\n        {\r\n          for (const figure of Object.keys(Figure)) \r\n          {\r\n            card=new Card(color,figure);\r\n            if(!blackDeck.includes(card)) this.cards.push(card);\r\n          }\r\n        }\r\n      }\r\n      shuffleArray(this.cards);\r\n    }\r\n\r\n    getOneCard()\r\n    {\r\n      return this.cards.pop();\r\n    }\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n*/","import React from \"react\"\r\n\r\nconst Status = ({status}) => {\r\n    if(status===null) return <ins><span role=\"img\" aria-label=\"dot\">⚪⚪</span></ins>\r\n    if(status===false) return <ins><span role=\"img\" aria-label=\"dot\">⚪🔴</span></ins>\r\n    return <ins><span role=\"img\" aria-label=\"dot\">🟢⚪</span></ins>\r\n}\r\n \r\nexport default Status;","import React from \"react\";\r\nimport Status from \"./status\";\r\nimport style from './local.css'\r\n\r\nconst GameStatus = ({points,gameStatus}) => {\r\n\r\n    const getStatus=(index)=>{\r\n        if(!gameStatus)return null;\r\n        return gameStatus.length>index ? gameStatus[index] : null;\r\n    }\r\n\r\n    return ( <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n        <div>GAME STATUS</div>\r\n        <div className={style.gameStatusBody}>\r\n            {points.map((point,index) =>\r\n            <div key={index}>\r\n                <div>{point}pkt</div>\r\n                <Status status={getStatus(index)}/> </div>\r\n            )}\r\n        </div>\r\n    </div> );\r\n}\r\n \r\nexport default GameStatus;","\r\nimport React from 'react';\r\nimport { Color, Figure } from '../../models/cards';\r\n\r\nexport const CCard = ({card,isFlipped,onClick}) => {\r\n    \r\n    return ( \r\n        <div className={'flip-card scale-hoverable'} onClick={onClick} style={{transform: (isFlipped? \"rotateY(180deg)\":\"\")}} >\r\n            \r\n            <div className={'flip-card-front'}>\r\n                <img \r\n                src={getPath(card,false)} \r\n                alt={card.toString()}></img>\r\n            </div>\r\n           \r\n            <div className='flip-card-back'>\r\n                <img\r\n                src={getPath(card,true)} \r\n                alt={\"Flipped card\"}></img>\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n}\r\n\r\nexport const MiniCard = ({style,isChildrenRotate,children}) => {\r\n    const {height,...globalStyle} = style;\r\n    const getTransfrom=(isRotate)=>{\r\n        if(isRotate)return \"translate(-50%,-65%) rotate(90deg)\"\r\n        return \"translate(-50%,-65%)\"\r\n    }\r\n    return (\r\n        <div className='scale-hoverable relative' style={globalStyle} >\r\n            <img style={{height,opacity:\"0.8\"}} src={getPath()} alt={\"Mini card\"}></img>\r\n            <div className='centered blackAndWhite' style={{fontWeight:\"bold\",fontSize:\"20px\",transform:getTransfrom(isChildrenRotate)}}>{children}</div>\r\n        </div>)\r\n}\r\n// local\r\n\r\n//niewykorzystywany \"?\" na odwrocie ... moze kiedys. (flip-q)\r\nconst prepath = \"/asset-cards-cute\" //row: 1-trefl , 2-karo , 3-pik , 4-kier\r\nconst getPath = (card=null,isFlipped=null)=>\r\n{\r\n    if(card===null) return process.env.PUBLIC_URL + [prepath,\"flip-empty\"].join(\"/\")+\".png\";\r\n    if(isFlipped) return process.env.PUBLIC_URL + [prepath,\"flip-\"+card.getColorOfColor()].join(\"/\")+\".png\";\r\n    \r\n    return process.env.PUBLIC_URL + [prepath,[\"row\",colorToRowNumber(card.color),\"column\",figureToColumnNumber(card.figure)].join(\"-\")].join(\"/\")+\".png\";\r\n}\r\n\r\n//local of local\r\nconst colorToRowNumber =(color)=>\r\n{\r\n    switch(color)\r\n    {\r\n        case Color.hearts: return 4;\r\n        case Color.clubs: return 1;\r\n        case Color.diamonds: return 2;\r\n        case Color.spades:return 3;\r\n        default: return 1;\r\n    }\r\n}\r\nconst figureToColumnNumber = (fig)=>{\r\n    return ((fig-1) % (Object.keys(Figure).length))+1\r\n}\r\n\r\n/*\r\nconst prepath = \"/asset-cards-basic\"\r\nconst getPath = (card,isFlipped)=>{\r\n    if(isFlipped) return [prepath,\"flipped\",card.toStringFlipSign()].join(\"/\")+\".png\";\r\n    return [prepath,[card.toStringFigure(),\"of\",card.toStringColor()].join(\"_\")].join(\"/\")+\".png\";\r\n}\r\n\r\n//const test = \"/asset-cards-bnw/flip-black/Flipped_black.png\"\r\n\r\nconst getPath = (card,isDarkMode,isFlipped)=>{\r\n    let mode = isDarkMode?\"black\":\"white\"\r\n    if(isFlipped) return [prepath,\"flip-\"+mode,[card.toStringFlipSign(),mode].join(\"_\")].join(\"/\")+\".png\";\r\n    return [prepath,mode,[card.toStringColor(),card.toStringFigure(),mode].join(\"_\")].join(\"/\")+\".png\";\r\n}\r\n*/","import React, { useRef, useState } from \"react\";\r\nimport {CCard } from \"./CCard\";\r\nimport style from './CHand.css'\r\nimport { useEffect } from \"react\";\r\n\r\nexport const CHand = ({initSize,handDeck,flop,isAcceptable,show={index:-1,isActive:false,cardPreview:false}}) => {\r\n    //handDeck nullable, ex. [null,card,card,null,null], state\r\n    //flop nullable, ex. [false,true,true,false,false], state\r\n    //show - index, isActive, cardPreview\r\n\r\n    const isNull = (id)=>{ //zalezne tylko od handdeck\r\n        if(!handDeck || !flop) return null;\r\n        return handDeck.getCard(id);\r\n    }\r\n\r\n    const getOpacity = ()=>{\r\n        return (!isAcceptable && !show.isActive?\"0.5\":\"1\")\r\n    }\r\n\r\n    const getCardOpacity = (index)=>{\r\n        return ((show.isActive && show.index!==index) ?\"0.5\":\"1\")\r\n    }\r\n\r\n    const getTranform =(index)=>{\r\n        return \"translate(0,\"+((index===show.index && (show.cardPreview||show.isActive)) ?\"25px\":\"0\")+\") \"\r\n    }\r\n\r\n    //drag and drop\r\n    const [orders,setOrders] = useState([...Array(initSize).keys()]);//cardIndex = orders[boxid] \r\n    const dragItem = useRef(null); //zapisywane jest boxid\r\n    const dragOverItem = useRef(null); //zapisywane jest boxid\r\n    const trySwitchOrder = ()=>{\r\n        if(!isAcceptable) return;\r\n        if(dragItem.current===null) return;\r\n        if(dragOverItem.current===null) return;\r\n\r\n        let boxid1 =dragItem.current;\r\n        let boxid2= dragOverItem.current;\r\n        let arr = [...orders];\r\n        [arr[boxid1],arr[boxid2]] = [arr[boxid2],arr[boxid1]]\r\n        setOrders(arr);\r\n\r\n        dragItem.current = null;\r\n        dragOverItem.current = null\r\n    }\r\n\r\n    return (\r\n        <div style={{\"position\":\"relative\"}}>\r\n            <div className={style.divflex+\" \" +style.hand+\" forth-color\"} style={{opacity:getOpacity()}}>\r\n                { orders.map((cardIndex,index)=>\r\n                    <div key={index} \r\n                    onDragStart={()=>{dragItem.current = index}}\r\n                    onDragEnter={()=>{dragOverItem.current = index}}\r\n                    onDragEnd={trySwitchOrder}\r\n                    >\r\n                        {isNull(cardIndex) &&\r\n                        <div style={{transition:\"transform 0.2s ease-in\",\r\n                        transform:getTranform(cardIndex),\r\n                        opacity:getCardOpacity(cardIndex)}}>\r\n\r\n                        <CCard card={handDeck.getCard(cardIndex)} isFlipped={flop.getFlip(cardIndex)}/>\r\n                            \r\n                        </div>}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n         );\r\n}\r\n\r\n\r\nconst maxExchangeAttempts = 3;\r\nexport const CMyHand = ({\r\n    initSize,handDeck,flop,isAcceptable,onAccept,\r\n    show={index:-1,isActive:false,cardPreview:true},\r\n    enterPrice,\r\n    isExchange,\r\n    onExchange\r\n    }) => { \r\n    //isAcceptable-state ,\r\n    //handDeck nullable, ex. [null,card,card,null,null], state\r\n    //flop nullable, ex. [false,true,true,false,false], state\r\n    //show - index, isActive,cardPreview\r\n\r\n    const [toggledCardIndex,setToggledCardIndex] = useState(null);\r\n    const [exchangeAttempts,setExchangeAttempts] = useState(maxExchangeAttempts);\r\n\r\n    useEffect(()=>{if(isAcceptable===false) setToggledCardIndex(null)},[isAcceptable])\r\n\r\n    const handleToggle = (index)=>{\r\n        if(index===toggledCardIndex) setToggledCardIndex(null);\r\n        else setToggledCardIndex(index);\r\n    }\r\n    const handleAccept = (index)=>{\r\n        onAccept(index);\r\n    }\r\n\r\n    const isNull = (id)=>{ //zalezne tylko od handdeck\r\n        if(!handDeck || !flop) return null;\r\n        return handDeck.getCard(id);\r\n    }\r\n\r\n    const getOpacity = ()=>{\r\n        return (!isAcceptable && !show.isActive?\"0.5\":\"1\")\r\n    }\r\n\r\n    const getCardOpacity = (index)=>{\r\n        return (isAcceptable || (show.isActive && show.index===index) ?\"1\":\"0.5\")\r\n    }\r\n\r\n    const getTranform =(index)=>{\r\n        return \"translate(0,\"+((index===toggledCardIndex \r\n            || (show.cardPreview===null && index===show.index)\r\n            || (show.cardPreview===true && index===show.index)) ?\"-30px\":\"0\")+\") \"\r\n    }\r\n    \r\n    //drag and drop\r\n    const [orders,setOrders] = useState([...Array(initSize).keys()]);//cardIndex = orders[boxid] \r\n    const dragItem = useRef(null); //zapisywane jest boxid\r\n    const dragOverItem = useRef(null); //zapisywane jest boxid\r\n    const trySwitchOrder = ()=>{\r\n        if(!isAcceptable) return;\r\n        if(dragItem.current===null) return;\r\n        if(dragOverItem.current===null) return;\r\n\r\n        let boxid1 =dragItem.current;\r\n        let boxid2= dragOverItem.current;\r\n        let arr = [...orders];\r\n        [arr[boxid1],arr[boxid2]] = [arr[boxid2],arr[boxid1]]\r\n        setOrders(arr);\r\n\r\n        dragItem.current = null;\r\n        dragOverItem.current = null\r\n    }\r\n    \r\n    //sort order\r\n    //5,null,null,K,Q => null,null,5,Q,K => null,null,0,4,3 => 1,2,0,4,3\r\n    const trySort=()=>{\r\n        if(!handDeck)return;\r\n        if(!isAcceptable) return;\r\n\r\n        let cards = handDeck.getCards()\r\n\r\n        let sorted = [...cards];\r\n        sorted.sort(function(a,b){\r\n            if(a===null&&b===null)return 0;\r\n            if(a===null)return -1;\r\n            if(b===null)return 1;\r\n            return a.figure-b.figure; \r\n        });\r\n\r\n        sorted = sorted.map(scard=>{\r\n            if(scard!==null) return cards.findIndex((card)=>{if(card===null)return false; return card.equal(scard)}) \r\n            return null\r\n        })\r\n\r\n        let cnt=0;\r\n        cards.forEach((card,index) => {  if(card===null) sorted[cnt++]=index; });\r\n\r\n        console.log(sorted);\r\n\r\n        setOrders(sorted);\r\n    }\r\n\r\n    const tryExchange = ()=>{\r\n        if(exchangeAttempts>0)\r\n        {\r\n            onExchange();\r\n            setExchangeAttempts(exchangeAttempts-1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{\"position\":\"relative\"}}>\r\n        <div className={style.divflex+\" \"+style.hand+\" forth-color\"} style={{opacity:getOpacity()}}>\r\n            { orders.map((cardIndex,index)=>\r\n            <div key={index} \r\n            onDragStart={()=>{dragItem.current = index}}\r\n            onDragEnter={()=>{dragOverItem.current = index}}\r\n            onDragEnd={trySwitchOrder}\r\n            >\r\n                    {isNull(cardIndex) && \r\n                    <div style={{\r\n                        position:\"relative\",\r\n                        transition:\"transform 0.2s ease-in\",\r\n                        transform:getTranform(cardIndex),\r\n                        opacity:getCardOpacity(cardIndex)\r\n                        }}>\r\n                    <CCard\r\n                        card={handDeck.getCard(cardIndex)}\r\n                        isFlipped={flop.getFlip(cardIndex)}\r\n                        onClick={()=>{if(isAcceptable)handleToggle(cardIndex)}}\r\n                    />\r\n\r\n                    <button \r\n                    className=\"hoverable\"\r\n                    style={{ \r\n                    fontSize:\"16px\",fontWeight:\"bold\",border:\"black 3px solid\",borderRadius:\"15px 15px 0px 0px\",backgroundColor:\"rgb(144, 238, 144)\",\r\n                    position:\"absolute\",left: \"50%\",transform: \"translate(-50%, 0)\",marginTop:\"-7px\",\r\n                    opacity:(cardIndex===toggledCardIndex ?\"1\":\"0\"),\r\n                    transition:\"height 0.2s ease-in\",\r\n                    height:(cardIndex===toggledCardIndex?\"30px\":\"0\"),\r\n                    }}\r\n                    onClick={()=>handleAccept(cardIndex)}>ACCEPT</button>\r\n                    </div> }\r\n            </div>\r\n            )}\r\n            {!handDeck && isAcceptable && <button className=\"hoverable\" style={{position:\"absolute\",height:\"auto\",alignSelf:\"center\"}} \r\n            onClick={onAccept} disabled={!isAcceptable}>PAY ENTRANCE ({enterPrice}$)</button>}\r\n        </div> \r\n          \r\n           {!isExchange && handDeck && show.cardPreview && <button className=\"right-centered forth-color\" style={{right:\"-190px\"}} onClick={trySort} disabled={!isAcceptable}>SORT</button>}\r\n           {isExchange && <button className=\"right-centered forth-color\" style={{right:\"-190px\"}} onClick={tryExchange}>EXCHANGE ({exchangeAttempts})</button>}\r\n       \r\n        </div>);\r\n}\r\n\r\nexport const CTable = ({initSize,tableDeck,flop,tableHands}) => {\r\n    //tableDeck nullable, ex. [null,card,card,null,null], state\r\n    //flop nullable, ex. [false,true,true,false,false], state\r\n    //tableHands state ex.[{up:card,down:card},...]\r\n\r\n    const isNull = (id)=>{ //zalezne tylko od handdeck\r\n        if(!tableDeck || !flop) return null;\r\n        return tableDeck.getCard(id);\r\n    }\r\n\r\n    const isTableHand = (index,isup)=>{\r\n        if(!tableHands || tableHands.length<=index) return false;\r\n        return isup ? tableHands[index].up!==null : tableHands[index].down!==null;\r\n    }\r\n    \r\n    return (\r\n        <div className={style.divflex+\" \"+style.table+\" forth-color\"}>\r\n            { new Array(initSize).fill(0).map((_,index) =>(\r\n                <div key={index}>\r\n                    {isNull(index) && <CCard mini card={tableDeck.getCard(index)} isFlipped={flop.getFlip(index)} /> }\r\n                    {isTableHand(index,true) && <CCard minimini card={tableHands[index].up} isFlipped={false} />}\r\n                    {isTableHand(index,false) && <CCard minimini card={tableHands[index].down} isFlipped={false} />}\r\n                </div>\r\n            ))}\r\n        </div>\r\n         );\r\n}\r\n","export class Flop //ex. [true,false,true,true,false]\r\n{\r\n  constructor(size,flop)//tego nie uzywamy\r\n  {\r\n    this.flips = !flop ? new Array(size).fill(true) : flop.getFlips();\r\n  }\r\n\r\n  static New(size){\r\n    return new Flop(size,null);\r\n  }\r\n\r\n  static Copy(flop){\r\n    return new Flop(null,flop);\r\n  }\r\n\r\n  getFlips(){return this.flips;}\r\n  getFlip(index){return this.flips[index]}\r\n  isShowAll(){\r\n    let res = true;\r\n    this.flips.forEach(flip => { if(flip)res=false; });\r\n    return res;\r\n  }\r\n  show(index){this.flips[index]=false;return this;}\r\n  showOnly(index)\r\n  {\r\n    for(let i =0;i<this.flips.length;i++)\r\n    {\r\n      if(i===index) this.flips[i]=false;\r\n      else this.flips[i]=true;\r\n    }\r\n    return this;\r\n  }\r\n  showAll(){this.flips =new Array(this.flips.length).fill(false);return this}\r\n  showNext(){\r\n    \r\n    let id = 0;\r\n    while(this.flips[id]===false && this.flips.length!==id)id++;\r\n    if(this.flips.length!==id) this.flips[id]=false;\r\n    \r\n    return this;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport style from './local.css'\r\n\r\nconst Timer = ({sets,onEnd}) => { // {time,reset,dotted=null}\r\n    \r\n    const [time,setTime]=useState(0);\r\n    const [isRed,setIsRed]=useState(false);\r\n    const isDotted=useRef(false);\r\n\r\n    useEffect(()=>{\r\n        if(!sets)return;\r\n        \r\n        if(sets.reset)\r\n        {\r\n            if(isRed) setIsRed(false);\r\n            isDotted.current=sets.dotted?sets.dotted:false;\r\n            let interval =startTimer(sets.time);\r\n            return ()=>clearInterval(interval);\r\n        }\r\n        else if(sets.time< time) \r\n        {\r\n            setIsRed(true);\r\n            let interval =startTimer(sets.time);\r\n            return ()=>clearInterval(interval);\r\n        }\r\n    },[sets]);\r\n\r\n    const startTimer=(time)=>{\r\n        let curr = time;\r\n        setTime(curr);\r\n        let interval = setInterval(()=>{\r\n            setTime(--curr);\r\n            if(curr===0)\r\n            {\r\n                clearInterval(interval);\r\n                onEnd();\r\n            }\r\n        },1000);\r\n        return interval\r\n    }\r\n\r\n    const getTimerFormat=()=>{\r\n        if(isDotted.current) return \".\".repeat(time);\r\n        return time?(time+\"s\"):\"TIMER\";\r\n    }\r\n    \r\n    return ( <div className={\"darker-color forth-color \"+style.timer+\" \"+(isRed?style.redTimer:style.defaultTimer)} >{getTimerFormat()} </div> );\r\n}\r\n \r\nexport default Timer;\r\n","\r\nimport React from 'react';\r\nimport { Random } from '../models/random';\r\n\r\nexport class Name extends React.Component\r\n{\r\n    //myname name bold\r\n\r\n    getName()\r\n    {\r\n        if(this.props.myname) return getMyName();\r\n        else if(this.props.name) return this.props.name\r\n        else return Random.getRandomName(true)\r\n    }\r\n\r\n    render()\r\n    { \r\n        return (\r\n            <ins style={{\"fontWeight\":(this.props.bold?\"bold\":\"none\")}}>\r\n                {this.getName()}\r\n            </ins>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n//local\r\n\r\nconst getMyName= ()=> {\r\n    let name = localStorage.getItem(\"name\");\r\n    if(!name) \r\n    {\r\n        name = Random.getRandomName(false);\r\n    }\r\n\r\n    return name;\r\n}\r\n","import React from \"react\";\r\nimport { MiniCard } from \"./CCard\";\r\n\r\n//main\r\nconst boxHeight = 134; //in px (144-boxPadding)\r\nconst cardHeight=50;//in px; boxHeight > cardHeight\r\nconst minCardWidth=40//in px; orginalna karta ma 144x100 wiec z proporcji...\r\n\r\n//details\r\nconst boxPadding = 5;\r\nconst cardMargin = 5;//in px\r\n\r\n//Wave\r\nconst Wave = ({size,code=null}) => {\r\n    //code: [true,false,false,null] - rosnie,maleje,maleje,stoi,maleje\r\n    //code.length+1 === size !!!\r\n\r\n    const getCardStyle=(delta=null,index=null)=>{return{\r\n        marginLeft:(index===0?\"0px\":cardMargin),\r\n        height:cardHeight+\"px\",\r\n        transform:\"translateY(\"+(-delta*getDeltaSpace())+\"px)\",\r\n    }}\r\n    const getBoxStyle=()=>{return{\r\n        padding:(boxPadding+\"px\"),\r\n        height:(boxHeight+\"px\"), //max height\r\n        width:getBoxWidth()+\"px\",\r\n    }}\r\n\r\n    // [true,false,false,null] => [0,1,0,-1,-1] => - || -\r\n    // [true,true,true,null] => [0,1,2,3,3] => [-2,-1,0,1,1]\r\n    // [false,false,false,false] => [0,-1,-2,-3,-4] => [2,1,0,-1,-2 ]\r\n    const getDeltaArray=()=>{\r\n        let res = new Array(size);\r\n        \r\n        //1=>2\r\n        res[0]=0;\r\n        code.forEach((c,i) => {\r\n            res[i+1]= res[i]+(c===null?0:(c?1:-1))\r\n        });\r\n\r\n        //2=>3\r\n        let max = Math.max(...res);\r\n        let min = Math.min(...res);\r\n        let distance = max+Math.abs(min);//max is always positive\r\n        let shift = Math.floor(distance/2);\r\n        if(max>Math.abs(min)) res= res.map(a=>a-shift);\r\n        else res = res.map(a=>a+shift);\r\n        \r\n        return res;\r\n    }\r\n\r\n    //local\r\n    const getDeltaSpace=()=>{\r\n        return Math.floor((boxHeight-cardHeight)/(size-1));\r\n    }\r\n    const getBoxWidth=()=>{\r\n        return minCardWidth*size + cardMargin*(size-1)\r\n    }\r\n\r\n    const getEmojiSpan=(code)=>{\r\n        if(code===true) return <span role=\"img\" aria-label=\"up\" style={{fontSize:\"15px\",opacity:\"0.5\"}}>⬆️</span>\r\n        if(code===false) return <span role=\"img\" aria-label=\"down\"style={{fontSize:\"15px\",opacity:\"0.5\"}}>⬇️</span>\r\n        return <span role=\"img\" aria-label=\"eq\"style={{fontSize:\"15px\",opacity:\"0.5\"}}>⏸️</span>\r\n    }\r\n\r\n    return ( \r\n    <div className='wave-box forth-color' style={getBoxStyle()}>\r\n        {code && getDeltaArray().map((delta,i)=>(\r\n            <MiniCard key={i} style={getCardStyle(delta,i)} \r\n            isChildrenRotate={i===0 || code[i-1]===null}>\r\n                {getEmojiSpan(i===0?null:code[i-1])}\r\n            </MiniCard>\r\n        ))}\r\n    </div> );\r\n}\r\n\r\nexport default Wave;","import React, { useRef }  from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { HandDeck, TableDeck} from '../models/decks';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport GameStatus from './components/gamestatus';\r\nimport { CHand, CMyHand, CTable } from './components/CHand';\r\nimport {Flop} from '../models/flops'\r\nimport { GameType } from '../models/game';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { AccountContext } from '../context/AccountContext';\r\nimport Timer from './components/timer';\r\nimport { GameSet } from '../models/consts';\r\nimport style from './local.css'\r\nimport classNames from 'classnames';\r\nimport {Name} from '../components/Name';\r\nimport { Link } from 'react-router-dom';\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport Wave from './components/Wave';\r\nimport { Figure } from '../models/cards';\r\nimport { Random } from '../models/random';\r\n\r\nconst test = false;\r\n\r\nconst CGame = () => {\r\n\r\n    //phases: ready-startround-accept-endround\r\n    \r\n    const {isDialog,setTextDialog}  = useContext(DialogContext)\r\n    const {balance,chargeBalance,chargeXp}           = useContext(AccountContext);\r\n    const {isCodeUsed,tryDeleteCodeUsed,saveCode}     = useContext(CodeContext);\r\n\r\n    const { id, myColor,opName,enterPrice } = useParams();\r\n    const game = GameSet.getGame(id);\r\n\r\n    const [myHandDeck,setMyHandDeck] = useState(null);\r\n    const [opHandDeck,setOpHandDeck] = useState(null);\r\n    const [tableDeck,setTableDeck] = useState(null);\r\n    const [myFlop,setMyFlop] = useState(null);//useless troche ale no.\r\n    const [opFlop,setOpFlop] = useState(null);\r\n    const [tableFlop,setTableFlop] = useState(null);\r\n\r\n    const [amIReady,setAmIReady] = useState(false);\r\n    const [isOpReady,setIsOpReady] = useState(false);\r\n\r\n    const [isAcceptable,setIsAcceptable] = useState(false);\r\n    const [isOpAcceptable,setIsOpAcceptable] = useState(false);\r\n    const [isOpQuit,setIsOpQuit] = useState(false);\r\n    const [myAcceptedIndex,setMyAcceptedIndex]=useState(null);//=> isAccpetable=true\r\n    const [opAcceptedIndex,setOpAcceptedIndex]=useState(null);//=> isAccpetable=true\r\n\r\n    const opSimulation= useRef(null);\r\n\r\n    const [timerSets,setTimerSets] = useState(null);  \r\n    const handleTimerEndString = useRef(\"null\");  \r\n\r\n    const [isShow,setIsShow]=useState(false);\r\n    const [gameStatus,setGameStatus]=useState(null);//true -myWin, false- opWin //can get round info //setter uzywany tylko raz na runde! //jesli null to przygotowania na razie\r\n    const [tableHands,setTableHands]=useState([]);// {up:card, down:card} \r\n\r\n    const [isExchange,setIsExchange]= useState(false);\r\n\r\n    const getRoundTime = ()=>{return game.getRoundTime(gameStatus.length) }\r\n\r\n    useEffect(()=>{\r\n        if(!test)\r\n        {\r\n            const timeout = setTimeout(()=>{\r\n                setIsOpAcceptable(true);//for ready button\r\n                setIsAcceptable(true);//for ready button\r\n                const timeout2 = setTimeout(()=>{OpReady()},1000*(3+Random.getRandom(3)));//op player ready (3-5s)\r\n                return ()=>clearTimeout(timeout2);\r\n    \r\n            },1000);\r\n            return ()=>clearTimeout(timeout);\r\n        }\r\n        else\r\n        {\r\n            setIsOpAcceptable(true);\r\n            setIsAcceptable(true);\r\n            OpReady()\r\n        }\r\n        \r\n    },[]);\r\n\r\n    const IReady = ()=>{ \r\n        setIsAcceptable(false);//ready button\r\n        setAmIReady(true);\r\n        setMyHandDeck(HandDeck.New(game.handDeckSize,myColor)); \r\n        setMyFlop(Flop.New(game.handDeckSize));\r\n    }\r\n    const OpReady = ()=>{\r\n        setIsOpAcceptable(false);//ready button\r\n        setIsOpReady(true);\r\n        setOpHandDeck(HandDeck.New(game.handDeckSize,myColor===\"red\"?\"black\":\"red\")); \r\n        setOpFlop(Flop.New(game.handDeckSize));\r\n    }\r\n    useEffect(()=>{\r\n        if(amIReady && isOpReady)\r\n        {\r\n            setIsExchange(true);\r\n            setMyFlop(Flop.Copy(myFlop).showAll()) //pokazuje karty , w celu wymiany\r\n\r\n            if(!test)chargeBalance(-enterPrice);//ACCOUNT\r\n    \r\n            restartTimer(\"readyDeckTimer\", 10 ,true);\r\n        }\r\n    },[amIReady,isOpReady])\r\n\r\n    const handleOnAccept=(index)=>{\r\n        if(!myHandDeck){\r\n            if(balance<enterPrice) setTextDialog(\"Not enough money to play.\",\"\");\r\n            else IReady();\r\n        } \r\n        else setMyAcceptedIndex(index);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(myAcceptedIndex!==null && opAcceptedIndex!==null) endRound();\r\n        else if(myAcceptedIndex!==null || opAcceptedIndex!==null) setTimerSets({time:getRoundTime()/2})\r\n\r\n        if(myAcceptedIndex!==null && isAcceptable)setIsAcceptable(false);\r\n        if(opAcceptedIndex!==null && isOpAcceptable)setIsOpAcceptable(false);\r\n    },[myAcceptedIndex,opAcceptedIndex])\r\n\r\n    const startRound =()=>{\r\n\r\n        //pokazanie kart\r\n        if(!myFlop.isShowAll())setMyFlop(Flop.Copy(myFlop).showAll())\r\n        if(!opFlop.isShowAll() && game.type===GameType.OpenCards) setOpFlop(Flop.Copy(opFlop).showAll())\r\n\r\n        //pokazanie karty\r\n        setTableFlop(Flop.Copy(tableFlop).showNext())\r\n\r\n        //wlaczenie dotykalnosci\r\n        setIsAcceptable(true);\r\n        setIsOpAcceptable(true);\r\n\r\n        //zaczecie myslenia\r\n        simulateOp();\r\n\r\n        //end\r\n        restartTimer(\"startRoundTimer\", getRoundTime() ,false);\r\n    }\r\n\r\n    const forceEndRound=()=>{\r\n        if(myAcceptedIndex===null)setMyAcceptedIndex(myHandDeck.getRandomIndex())\r\n        if(opAcceptedIndex===null)setOpAcceptedIndex(opHandDeck.getRandomIndex())\r\n    }\r\n\r\n    const endRound = ()=>{\r\n        //clear opSimulation\r\n        clearInterval(opSimulation.current);\r\n\r\n        //show\r\n        setIsShow(true);\r\n\r\n        //pokazuje karty\r\n        if(game.type===GameType.HiddenCards) setOpFlop(Flop.Copy(opFlop).show(opAcceptedIndex))\r\n        \r\n        restartTimer(\"endRoundTimer\",5,true);\r\n    }\r\n\r\n    function onTimerEnd()\r\n    {\r\n        if(handleTimerEndString.current===\"startRoundTimer\") startRoundTimer(); \r\n        else if (handleTimerEndString.current===\"endRoundTimer\")endRoundTimer();\r\n        else if (handleTimerEndString.current===\"readyDeckTimer\") readyDeckTimer();\r\n    }\r\n    const startRoundTimer = ()=>{forceEndRound();} //if round timer ends\r\n    //if ready section ends\r\n    const readyDeckTimer = ()=>{\r\n        setTableDeck(TableDeck.New(game.tableDeckSize,myHandDeck,opHandDeck)); \r\n        setTableFlop(Flop.New(game.tableDeckSize));\r\n        setIsExchange(false);\r\n        setTimeout(()=>setGameStatus([]),1000);\r\n    } \r\n    //if ending timer ends\r\n    const endRoundTimer=()=>{\r\n        let myCard = myHandDeck.getCard(myAcceptedIndex)\r\n        let opCard = opHandDeck.getCard(opAcceptedIndex)\r\n        let tableCard = tableDeck.getCard(gameStatus.length);\r\n\r\n        //usuwa karty\r\n        setMyHandDeck(HandDeck.Copy(myHandDeck).takeOffCardByIndex(myAcceptedIndex))\r\n        setOpHandDeck(HandDeck.Copy(opHandDeck).takeOffCardByIndex(opAcceptedIndex))\r\n\r\n        //zerowanko\r\n        setMyAcceptedIndex(null);\r\n        setOpAcceptedIndex(null);\r\n        setIsShow(false);\r\n    \r\n        //dodaje do tableHands\r\n        let arr = [...tableHands];\r\n        arr.push({up:opCard,down:myCard})\r\n        setTableHands(arr);\r\n\r\n        //dodaje do gameStatus\r\n        arr = [...gameStatus];\r\n        arr.push(myCard.isCloser(opCard,tableCard));\r\n        setGameStatus(arr); //przy zmianie statusu => nowa runda hanler\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(gameStatus!==null)\r\n        {\r\n            if(gameStatus.length<game.getMaxRounds()) startRound();\r\n            else\r\n            {\r\n                let greens = countGreens();\r\n                let myPoints = countPoints();\r\n                if(game.isWin(myPoints))\r\n                {\r\n                    setTextDialog(\"YOU WON\",\"GGs!\");\r\n                    if(gameStatus.length === greens) \r\n                    {\r\n                        if(!isCodeUsed(2)) saveCode(2,\"Your first all-green win! Grab a reward.\");\r\n                        else{\r\n                            tryDeleteCodeUsed(4) \r\n                            saveCode(4,\"All-green win! GGs!\");\r\n                        }\r\n                    }\r\n                    \r\n                    chargeBalance(enterPrice*2);\r\n                }\r\n                else if(game.isDraw(myPoints))\r\n                {\r\n                    setTextDialog(\"YOU DREW\",\"Even gameplay.\");\r\n                    chargeBalance(enterPrice);\r\n                }\r\n                else\r\n                {\r\n                    setTextDialog(\"YOU LOSE\",\"Better luck next time...\");                \r\n                }\r\n                \r\n                chargeXp(greens*10);\r\n\r\n                leaveOp();\r\n            }\r\n        }\r\n    },[gameStatus])\r\n\r\n    const simulateOp = ()=>{\r\n        opSimulation.current = setInterval(()=>{\r\n            let range = getRoundTime()/5;\r\n            if(isEndRound()) range = 2;\r\n            else if(myAcceptedIndex) range = 3;\r\n            else if(Random.getRandom(5)===1) range=3;//extra\r\n\r\n            if(Random.getRandom(range)===1)//gdy roundtime =30 to 12s,\r\n            {\r\n                setOpAcceptedIndex(opHandDeck.getRandomIndex());\r\n                clearInterval(opSimulation.current);\r\n            }\r\n        },2000);\r\n    }\r\n    const leaveOp=()=>{\r\n        setTimeout(()=>{\r\n            setIsOpQuit(true);\r\n        },(4+Random.getRandom(7))*1000)//4s - 10s\r\n    }\r\n\r\n    function restartTimer(handler,time,dotted){\r\n        setTimerSets({time:time,reset:true,dotted:dotted});\r\n        handleTimerEndString.current =handler;\r\n    }\r\n\r\n    const countPoints = () =>{\r\n        let cnt = 0;\r\n        game.points.forEach((point,index) => {\r\n            if(gameStatus[index]) cnt+= point;\r\n        });\r\n        return cnt;\r\n    }\r\n    const countGreens=()=>{\r\n        let cnt = 0;\r\n        gameStatus.forEach(status => {\r\n            if (status===true)cnt++;\r\n        });\r\n        return cnt;\r\n    }\r\n\r\n    const getShow=(my)=>{\r\n       return {index:(my?myAcceptedIndex:opAcceptedIndex),isActive:isShow,cardPreview:(my?true:(game.type!==GameType.OpenCards))}\r\n    }\r\n\r\n    const isEndRound = ()=>{\r\n        return gameStatus===null ? false : gameStatus.length===game.getMaxRounds();\r\n    }\r\n    const getWaveCode = ()=>{\r\n        if(!tableDeck) return null;\r\n        return tableDeck.getWaveCode();\r\n    }\r\n\r\n    const onExchangeHandle = ()=>{\r\n        setMyHandDeck(HandDeck.New(game.handDeckSize,myColor)); \r\n    }\r\n\r\n    return ( \r\n        <div className={\"blurable \" +classNames({\"blured\":isDialog} )+\" layout\"} >\r\n\r\n            <div className={style.timer}>\r\n                <Timer sets={timerSets} onEnd={()=>onTimerEnd()}/>\r\n            </div>\r\n\r\n            <div className={style.handtable+\" fade\"}>\r\n                {!isOpQuit && <Name bold name={opName}/> }\r\n                {isOpQuit && <Name bold name={\"[opponent left]\"}/> }\r\n                <CHand initSize={game.handDeckSize} handDeck={opHandDeck} flop={opFlop} isAcceptable={isOpAcceptable} show={getShow(false)}/>\r\n                <CTable initSize={game.tableDeckSize} tableDeck={tableDeck} flop={tableFlop} tableHands={tableHands}/>\r\n                <CMyHand initSize={game.handDeckSize} handDeck={myHandDeck} flop={myFlop} isAcceptable={isAcceptable}\r\n                    onAccept={(index)=> handleOnAccept(index)}\r\n                    show={getShow(true)}\r\n                    enterPrice={enterPrice}\r\n                    isExchange={isExchange}\r\n                    onExchange={onExchangeHandle}/>\r\n                <Name bold myname/>\r\n            </div>\r\n\r\n            <div className={style.wave}>\r\n                <Wave size={game.tableDeckSize} code={getWaveCode()}/>\r\n            </div>\r\n\r\n            <div className={style.sidebar } >\r\n                <h2>{game.name}</h2>\r\n                <div className=\"layout-info\">WIN PRICE\r\n                    <div className=\"layout-info-big\"><ins>{enterPrice}$</ins> {enterPrice*2}$ <ins>{enterPrice}$</ins></div>\r\n                </div>\r\n                <GameStatus points={game.points} gameStatus={gameStatus}/>\r\n                <div className=\"layout-info\">RULES\r\n                    <div>Card closest to the one on the table wins</div>\r\n                    <div>If figure is the same - color matters</div>\r\n                    <div>Last round has higher punctation</div>\r\n                    <div>So play smart, play LATER!</div>\r\n                    <div>Use code: rules ;)</div>\r\n                </div>\r\n                <div className=\"layout-info\">INFO\r\n                    <div>Drag card to switch its position</div> \r\n                    <div>The mini panel represents card's figures comparison</div>\r\n                    <div>Card's order: {Object.keys(Figure).join(\" \")}</div>\r\n                </div>\r\n                {isEndRound() && <Link to={{ pathname: ('/')}}>\r\n                    <div className={style.quit +\" hoverable\"}>QUIT</div>\r\n                </Link>}\r\n            </div>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nexport default CGame;\r\n","import React, { useState } from 'react'\r\n\r\nexport const DarkModeContext = React.createContext();\r\n\r\nconst DarkModeProvider = ({children})=>\r\n{\r\n    var [isDarkMode,setIsDarkMode] = useState(true);\r\n\r\n    return(\r\n        <DarkModeContext.Provider value={{isDarkMode:isDarkMode,switchDarkMode:()=>setIsDarkMode(!isDarkMode)}}>\r\n            {children}\r\n        </DarkModeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DarkModeProvider;","import React, { useContext, useEffect, useState }  from 'react';\r\nimport { AccountContext } from '../context/AccountContext';\r\nimport { DarkModeContext } from '../context/DarkModeContext';\r\nimport './Account.css'\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { NotificationContext } from \"../context/NotificationContext\";\r\n\r\nconst test = false;\r\n\r\nconst Account = ({onCharging}) => {\r\n    //onCharging - is balance charging up - true ; is balance charging down - false ; is not charging - null ;\r\n\r\n    const {balance,xp} = useContext(AccountContext);\r\n    const {isNotification}=useContext(NotificationContext);\r\n    const {isDialog,setTextDialog} = useContext(DialogContext)\r\n    const {isCodeDialogOpen,openCodeDialog} = useContext(CodeContext);\r\n    const {switchDarkMode} = useContext(DarkModeContext);\r\n\r\n    const [currBalance,setCurrBalance] = useState(0);\r\n    const [currXp,setCurrXp] = useState(0);\r\n\r\n    const [isBalanceCharging,setIsBalanceCharging] = useState(false);\r\n    const [isXpCharging,setIsXpCharging] = useState(false);\r\n\r\n    const [isNotificationIcon,setIsNotificationIcon] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(balance)\r\n        {\r\n            if(!test)\r\n            {\r\n                let value = balance-currBalance;\r\n                if(value===0) return;\r\n\r\n                setIsBalanceCharging(true);\r\n                onCharging(value>0);\r\n\r\n                let curr = currBalance;\r\n                const interval = setInterval(()=>{\r\n                    if(value ===0){setIsBalanceCharging(false);onCharging(null);clearInterval(interval)}\r\n        \r\n                    let delta = delting(value);\r\n                    \r\n                    curr += delta;\r\n                    setCurrBalance(curr);\r\n\r\n                    value-=delta;\r\n                },30)\r\n\r\n                return ()=> {setIsBalanceCharging(false);onCharging(null);clearInterval(interval)}\r\n            }\r\n            else setCurrBalance(balance)\r\n            \r\n        }\r\n\r\n    },[balance])\r\n\r\n    useEffect(()=>{\r\n\r\n        if(xp)\r\n        {\r\n            if(!test)\r\n            {\r\n                let value = xp-currXp;\r\n                if(value===0) return\r\n\r\n                setIsXpCharging(true);\r\n\r\n                let curr = currXp;\r\n                const interval = setInterval(()=>{\r\n                    if(value ===0) {setIsXpCharging(false);clearInterval(interval)}\r\n        \r\n                    let delta = delting(value);\r\n                    \r\n                    curr += delta;\r\n                    setCurrXp(curr);\r\n    \r\n                    value-=delta;\r\n                },30)\r\n    \r\n                return ()=> {setIsXpCharging(false);clearInterval(interval)}\r\n            }\r\n            else setCurrXp(xp);\r\n            \r\n        }\r\n        \r\n    },[xp])\r\n\r\n    useEffect(()=>{\r\n        if(isNotification) setIsNotificationIcon(true);\r\n    },[isNotification])\r\n\r\n\r\n\r\n    const handleOpenInfoXp = ()=>{\r\n        setTextDialog(\"GGs points\",\"Gained Greens, aka XP, calculated by the single rounds won * 10.\")\r\n    }\r\n    \r\n    const handleOpenCodeDialog = ()=>{\r\n        setIsNotificationIcon(false);\r\n        openCodeDialog();\r\n    }\r\n\r\n    return (\r\n    <div className=\"acc\" >\r\n        <div className='acc-box darker-color-box'>\r\n            <div style={{scale:(isXpCharging?\"1.2\":\"1\")}}>{currXp}GGs</div>\r\n            <button className={(!isDialog? 'scale-hoverable':\"\")} onClick={handleOpenInfoXp}>i </button>\r\n        </div>\r\n        \r\n        <div className='acc-box' >\r\n            <div className='darker-color' style={{scale:(isBalanceCharging?\"1.2\":\"1\")}}>{currBalance}$ </div>\r\n            <div className='notification'>\r\n                <button className={(\"darker-color \"+(!isCodeDialogOpen? 'scale-hoverable':\"\"))} onClick={handleOpenCodeDialog}>+</button>\r\n                {isNotificationIcon && <span></span>}\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <label className=\"switch\">\r\n            <input type=\"checkbox\" onClick={()=>switchDarkMode()} defaultChecked/>\r\n            <span className=\"slider round\"> </span>\r\n        </label>\r\n        \r\n    </div>  );\r\n}\r\n \r\nexport default Account;\r\n\r\nconst delting = (value) =>{\r\n    return value>0? Math.ceil(value/30):Math.floor(value/30);\r\n}\r\n\r\n\r\n    \r\n\r\n    ","import React  from 'react';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { AccountContext } from '../../context/AccountContext';\r\nimport { Name } from '../../components/Name';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { Random } from '../../models/random';\r\nimport './local.css';\r\n\r\nconst RoomList = ({gameId}) => {\r\n\r\n    const {getBalance} = useContext(AccountContext);//use myBalance instead\r\n    const balance = getBalance();\r\n\r\n    const maxRangePrice = toRangePriceFloor(balance);\r\n    const [myRangePrice,setMyRangePrice]= useState(toRangePriceFloor(Math.floor(balance/10)))\r\n    const [myColor,setMyColor]=useState(\"black\");\r\n    const [list,setList]=useState(initList(maxRangePrice))\r\n\r\n    useEffect(()=>{\r\n        const interval = setInterval(()=>{\r\n            setList(changeList(list,maxRangePrice))\r\n        },Random.getRandomRangeIn(5,10)*1000)//1-5s\r\n        return ()=>clearInterval(interval)\r\n    },[])\r\n    \r\n    \r\n    return (\r\n        <div className='roomlistbox forth-color' >\r\n            <div className='header'>\r\n                <div>ROOMS</div>\r\n                <div style={{whiteSpace:\"nowrap\"}}>1$ - {maxRangePrice}$</div>\r\n                <div style={{opacity:\"0\"}}>ROO</div>\r\n            </div>\r\n\r\n            <div className='list'>\r\n                {list.map((item,i)=>(\r\n                <div className='item' key={i}>\r\n                    <Name name={item.name}/>\r\n                    <div >{item.color.toUpperCase()}</div> {/*<span role=\"img\"aria-label=\"color\">♥️♦️♠️♣️</span>*/}\r\n                    <div>{item.price}$</div>\r\n                    <Link to={{ pathname: (\"/\"+[\"game\",gameId,item.color===\"black\"?\"red\":\"black\",item.name,item.price].join(\"/\"))}}>\r\n                        <button> JOIN </button>\r\n                    </Link>\r\n                </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className='item'>\r\n                <Name myname/>\r\n                <div className='hoverable' onClick={()=>{setMyColor(myColor===\"black\"?\"red\":\"black\")}} style={{textDecoration:\"underline\"}}>{myColor.toUpperCase()}</div>\r\n                <div>{myRangePrice}$</div>\r\n                <input type=\"range\" min=\"0\" max={getRangePriceIndex(maxRangePrice)} \r\n                    value={getRangePriceIndex(myRangePrice)}\r\n                    onChange={event=>setMyRangePrice(getRangePrice(event.target.value))}>\r\n                </input>\r\n                <button disabled>CREATE</button>\r\n            </div>\r\n        </div>);\r\n}\r\n \r\nexport default RoomList;\r\n\r\n//local\r\n\r\nconst initList=(maxRangePrice)=>{\r\n    let res=[];\r\n\r\n    let initLength = getInitLength(maxRangePrice);\r\n    let maxIndex = getRangePriceIndex(maxRangePrice);\r\n    for(let i =0;i<initLength;i++)\r\n    {\r\n        res.push(new ListItem(Random.getRandomName(),Random.getRandomColorOfColor(),getRangePrice(Random.getRandomIn(maxIndex))))\r\n    }\r\n\r\n    res.sort(function(a,b){  return b.price- a.price;  });\r\n    return res;\r\n}\r\n\r\nconst changeList=(list,maxRangePrice)=>{\r\n    let res=[...list];\r\n\r\n    let toDelete = getDeleteLength(maxRangePrice);\r\n    \r\n    for(let i =0;i<toDelete;i++)\r\n    {\r\n        if(res.length<=0)break;\r\n        res.splice(Math.floor(Math.random()*res.length), 1);\r\n    }\r\n\r\n    let toAdd = getAddLength(maxRangePrice);\r\n    let maxIndex = getRangePriceIndex(maxRangePrice);\r\n    for(let i =0;i<toAdd;i++)\r\n    {\r\n        res.push(new ListItem(Random.getRandomName(),Random.getRandomColorOfColor(),getRangePrice(Random.getRandomIn(maxIndex))))\r\n    }\r\n\r\n    res.sort(function(a,b){  return b.price- a.price;  });\r\n    return res;\r\n}\r\n\r\nclass ListItem{\r\n    constructor(name,color,price)\r\n    {\r\n        this.name = name;\r\n        this.color = color;\r\n        this.price = price;\r\n    }\r\n}\r\n\r\n\r\n//range price = [1,2,4,8,10,20,40,80,...]\r\n\r\nconst toRangePriceFloor=(price)=>{\r\n    if(price<1) return 1\r\n    let base = Math.pow(10, Math.floor(Math.log10(price)))\r\n    while(base*2<price) base*=2;\r\n    return base\r\n}\r\n\r\nconst getRangePriceIndex=(maxPrice)=>{\r\n    let index=0;\r\n    while(getRangePrice(index)<=maxPrice)index++;\r\n    return index-1;\r\n}\r\n\r\nconst getRangePrice=(index)=>{\r\n    return Math.pow(2,index%4) * Math.pow(10,Math.floor(index/4))\r\n}\r\n\r\n//local of local\r\nconst getInitLength=(maxRangePrice)=>{// maxRangePrice = 100 => 8 => 15\r\n    let i = getRangePriceIndex(maxRangePrice);\r\n    let s = Math.ceil(Math.sqrt(i))*5;\r\n    return 1+Random.getRandom(s)\r\n}\r\n\r\nconst getAddLength=(maxRangePrice)=>{// maxRangePrice = 100 => 8 => 2\r\n    let i = getRangePriceIndex(maxRangePrice);\r\n    let s = Math.ceil(Math.sqrt(i));\r\n    return Random.getRandom(s)\r\n}\r\n\r\nconst getDeleteLength=(maxRangePrice)=>{// maxRangePrice = 100 => 8 => 2\r\n    let i = getRangePriceIndex(maxRangePrice);\r\n    let s = Math.ceil(Math.sqrt(i));\r\n    return Random.getRandom(s)\r\n}\r\n","import React, { useContext }  from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { GameSet } from '../models/consts';\r\nimport RoomList from './components/RoomList';\r\nimport style from './local.css'\r\n\r\nconst WaitingRoom = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    let game = GameSet.getGame(id);\r\n    \r\n    const {isDialog} = useContext(DialogContext);\r\n\r\n    return ( \r\n        <div className={\"blurable \" + (isDialog?\"blured\":\"\") + \" layout\"} >\r\n            <div className={style.content}>\r\n                <RoomList gameId={game.id}/>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>{game.name}</h2>\r\n                <div className=\"layout-info\">ABOUT\r\n                    <div>{game.about()}</div>\r\n                </div>\r\n                <div className=\"layout-info\">INFO\r\n                    <div>Points: {game.points.join(\"pkt, \")}pkt</div>\r\n                    <div>Game type: {game.type}</div>\r\n                    <div>Avg. round time: {game.getRoundTime()}s</div>\r\n                    <div>{game.handDeckSize} hand cards</div>\r\n                    <div>{game.tableDeckSize} table cards</div>\r\n                </div>\r\n                <div className=\"layout-info\">RULES\r\n                    <div>Card closest to the one on the table wins</div>\r\n                    <div>If figure is the same - color matters</div> \r\n                    <div>Last round has higher punctation</div>\r\n                    <div>So play smart, play LATER!</div>\r\n                    <div>Use code: rules ;)</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default WaitingRoom;","\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst consts={\r\n    refreshTime:10,\r\n    initTotalPlayers:420,\r\n    initTotalPlayersDelta:100,\r\n    initGamePlayers:100,\r\n    initGamePlayersDelta:20,\r\n    totalPlayersDelta:5,\r\n    gamePlayersDelta:4,\r\n}\r\n\r\nexport const OnlineContext = React.createContext();\r\n\r\nconst OnlineProvider = ({children})=>\r\n{\r\n    //const [gamePlayers,setGamePlayers] = useState(getInitGamePlayers());// {red, black}\r\n    const [totalPlayers,setTotalPlayers] = useState(getInitTotalPlayers());\r\n\r\n    useEffect(() => {\r\n        var initTotalPlayers = totalPlayers;\r\n        //var initGamePlayers = gamePlayers;\r\n\r\n        const interval = setInterval(() => {\r\n\r\n            //total\r\n            let rand = getRandom(consts.totalPlayersDelta);\r\n            if(totalPlayers>initTotalPlayers) setTotalPlayers(totalPlayers-rand)\r\n            else setTotalPlayers(totalPlayers+rand);\r\n\r\n            //game\r\n            /*\r\n            let red = gamePlayers.red;\r\n            let black = gamePlayers.black;\r\n            rand = getRandom(consts.gamePlayersDelta);\r\n            if(red+black > initGamePlayers.red+initGamePlayers.black)\r\n            {\r\n                if(red>black)  setGamePlayers({red:red-rand,black:black})\r\n                else setGamePlayers({red:red,black:black-rand})\r\n            }\r\n            else\r\n            {\r\n                if(red>black)  setGamePlayers({red:red,black:black+rand})\r\n                else setGamePlayers({red:red,black:black+rand})\r\n            }\r\n            */\r\n        }, consts.refreshTime*1000);\r\n\r\n        return () => clearInterval(interval)\r\n      }, []);\r\n    \r\n\r\n    return(\r\n        <OnlineContext.Provider value={{/*gamePlayers,*/totalPlayers}}>{children}</OnlineContext.Provider>\r\n    )\r\n}\r\n\r\nexport default OnlineProvider;\r\n\r\n//local\r\n\r\n/*\r\nconst getInitGamePlayers =()=> {\r\n    let all = consts.initGamePlayers+getRandomDelta( consts.initGamePlayersDelta);\r\n    return {red:Math.floor(all/2),black:Math.floor(all/2)}\r\n}\r\n*/\r\n\r\nconst getInitTotalPlayers =()=> {\r\n    return consts.initTotalPlayers+ getRandomDelta(consts.initTotalPlayersDelta)\r\n}\r\n\r\n//local of local\r\n\r\nconst getRandom =(range)=>{//return number between 0 - (range-1)\r\nreturn Math.floor(Math.random()*range);\r\n}\r\n\r\nconst getRandomDelta =(delta)=>{//return number between 0 - (range-1)\r\nreturn -delta + getRandom(delta*2)\r\n}","import React, { useContext}  from 'react';\r\nimport { OnlineContext } from '../context/OnlineContext';\r\n\r\nconst Online = () => {\r\n\r\n    const {totalPlayers} = useContext(OnlineContext);\r\n\r\n    return (<div className=\"online-id\" >ONLINE: {totalPlayers}</div>);\r\n}\r\nexport default Online;\r\n\r\n","import React, { useContext } from 'react';\nimport Home from './p-home/Home';\nimport CGame from './p-play-room/CGame';\nimport {HashRouter as Router,Route,Routes} from 'react-router-dom'\nimport Account  from './components/Account';\nimport WaitingRoom from './p-waiting-room/WaitingRoom';\nimport Online from './components/Online'\nimport OnlineProvider from './context/OnlineContext';\nimport NotificationProvider from './context/NotificationContext';\nimport AccountProvider from './context/AccountContext';\nimport DialogProvider from './context/DialogContext';\nimport { DarkModeContext } from './context/DarkModeContext';\nimport CodeProvider from './context/CodeContext';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const {isDarkMode} = useContext(DarkModeContext);\n\n  const [navBarGold,setNavBarGold] = useState(null);//true-gold,false-red,null-default\n\n  const getNavBarClass =()=>{\n    if(navBarGold===null) return \"primary-color\";\n    return navBarGold?\"goldish-bg\":\"redish-bg\"\n  }\n\n  return (\n    \n      <div className={\"App \" +(isDarkMode?\"secondary-color\":\"third-color\")} >\n      \n      <DialogProvider>\n      <NotificationProvider>\n      <AccountProvider>\n      <CodeProvider>\n          <div className={'navbar '+getNavBarClass()}>\n            <div className='darker-color'><b>LATER <span role=\"img\" aria-label=\"dot\">🎴</span></b> the gambling game</div>\n            <div><Account onCharging={(val)=>{setNavBarGold(val)}}></Account></div>\n          </div>\n\n        <div className='content'>\n          <OnlineProvider>\n                <Router>\n                  <Routes>\n                    <Route exact path='/' element={<Home/>} />\n                    <Route exact path='/waiting-room/:id' element={<WaitingRoom/>} />\n                    <Route exact path='/game/:id/:myColor/:opName/:enterPrice' element={<CGame/>} />\n                  </Routes>\n                </Router>\n              \n              <Online/>\n          </OnlineProvider>\n          </div>\n      </CodeProvider>\n      </AccountProvider>\n      </NotificationProvider>\n      </DialogProvider>\n      \n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport DarkModeProvider from './context/DarkModeContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <DarkModeProvider >\n      <App />\n    </DarkModeProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}