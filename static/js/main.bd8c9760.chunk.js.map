{"version":3,"sources":["p-home/Home.css","p-play-room/components/CHand.css","p-play-room/local.css","p-play-room/components/local.css","p-waiting-room/local.css","context/AccountContext.js","components/InputDialog.js","components/TextDialog.js","context/DialogContext.js","context/NotificationContext.js","context/CodeContext.js","components/Name.js","p-home/components/GameBox.js","models/game.js","models/consts.js","p-home/Home.js","models/cards.js","models/decks.js","p-play-room/components/status.js","p-play-room/components/gamestatus.js","p-play-room/components/CCard.js","p-play-room/components/CHand.js","models/flops.js","p-play-room/components/timer.js","context/OnlineContext.js","p-play-room/components/Wave.js","p-play-room/CGame.js","context/DarkModeContext.js","components/Account.js","p-waiting-room/WaitingRoom.js","components/Online.js","App.js","index.js"],"names":["module","exports","flex","margin","rank","divflex","table","hand","handtable","timer","wave","info","sidebar","home","redTimer","gameStatusBody","content","head","foot","AccountContext","React","createContext","getLocalNumber","str","localStorage","getItem","setItem","Number","AccountProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","balance","setBalance","_useState3","_useState4","xp","setXp","value","chargeBalance","chargeXp","react_default","a","createElement","Provider","InputDialog","text","onClose","inputRef","useRef","style","zIndex","className","onClick","role","aria-label","type","maxLength","ref","current","TextDialog","title","bold","marginTop","fontSize","DialogContext","DialogProvider","textDialog","setTextDialog","inputDialog","setInputDialog","arguments","length","undefined","isDialog","components_InputDialog","components_TextDialog","NotificationContext","NotificationProvider","useContext","notification","setNotification","isNotification","showNotification","codes","0","1","2","codesValue","imnew","name40","greenwin","CodeContext","CodeProvider","_useContext2","isCodeDialogOpen","setIsCodeDialogOpen","verifyCode","code","codeId","codeToCodeId","isCodeUsed","isCodeToUse","addUsedCode","useEffect","addCodeToUse","arr","JSON","parse","push","stringify","codeid","includes","keys","find","id","openCodeDialog","saveCode","description","console","log","Name","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getRandomName","includeCustom","getRandom","customNames","getMyName","name","setMyName","codeContext","setState","handleOnClick","context","state","inherits","createClass","key","myname","range","Math","floor","random","_this2","clickable","fontWeight","Component","contextType","withCodeContext","Consumer","assign","GameBox","game","main","_useContext","isLock","isBalanceOk","isXpOk","minXp","enterPrice","dist","textDecoration","to","bids","Game","firstbid","lastbid","roundTime","handDeckSize","tableDeckSize","Array","fill","reduce","b","GameType","Rank","GameSet","games","getGame","getGames","filter","Home","currRank","currGames","timeout","setTimeout","clearTimeout","classNames","blured","textAlign","components_Name","p_home_components_GameBox","display","justifyContent","alignItems","flexDirection","Card","color","figure","card","opCard","tableCard","myDelta","abs","opDelta","getColorOfColor","figureToString","colorToString","Color","hearts","clubs","diamonds","spades","Figure","3","4","5","6","7","8","9","10","J","Q","K","A","fig","col","HandDeck","size","handDeck","cards","getCards","getRandomHandCards","equal","index","len","getCardsLength","rand","getCardsSize","handdeck","TableDeck","handDeck1","handDeck2","tableDeck","toArray","getRandomTableCards","res","prevFigure","forEach","i","_loop","temp","getRandomColor","getRandomFigure","_loop2","isCard","Status","status","GameStatus","gameStatus","getStatus","map","bid","components_status","CCard","isFlipped","transform","src","getPath","alt","toString","MiniCard","_ref2","height","globalStyle","objectWithoutProperties","opacity","prepath","process","join","colorToRowNumber","figureToColumnNumber","CHand","initSize","flop","isAcceptable","_ref$show","show","isActive","cardPreview","getCardOpacity","getTranform","_","transition","getCard","CCard_CCard","getFlip","CMyHand","onAccept","_ref2$show","toConsumableArray","orders","setOrders","toggledCardIndex","setToggledCardIndex","dragItem","dragOverItem","trySwitchOrder","boxid1","boxid2","_ref3","cardIndex","onDragStart","onDragEnter","onDragEnd","position","border","borderRadius","backgroundColor","left","alignSelf","disabled","CTable","_ref4","tableHands","isTableHand","isup","up","down","mini","minimini","Flop","flips","getFlips","flip","Timer","sets","onEnd","time","setTime","isRed","setIsRed","isDotted","reset","dotted","interval","startTimer","clearInterval","curr","setInterval","defaultTimer","repeat","consts","OnlineContext","OnlineProvider","getInitGamePlayers","gamePlayers","setGamePlayers","getInitTotalPlayers","totalPlayers","setTotalPlayers","initTotalPlayers","initGamePlayers","red","black","all","getRandomDelta","delta","Wave","_ref$code","getCardStyle","marginLeft","cardHeight","getDeltaSpace","getBoxWidth","padding","boxPadding","boxHeight","width","c","max","apply","min","distance","shift","getDeltaArray","CCard_MiniCard","CGame","_useContext3","_useParams","useParams","myColor","myHandDeck","setMyHandDeck","opHandDeck","setOpHandDeck","_useState5","_useState6","setTableDeck","_useState7","_useState8","myFlop","setMyFlop","_useState9","_useState10","opFlop","setOpFlop","_useState11","_useState12","tableFlop","setTableFlop","_useState13","_useState14","setIsAcceptable","_useState15","_useState16","isOpAcceptable","setIsOpAcceptable","_useState17","_useState18","isOpPresent","setIsOpPresent","_useState19","_useState20","myAcceptedIndex","setMyAcceptedIndex","_useState21","_useState22","opAcceptedIndex","setOpAcceptedIndex","opSimulation","_useState23","_useState24","timerSets","setTimerSets","handleTimerEndString","_useState25","_useState26","isShow","setIsShow","_useState27","_useState28","setGameStatus","_useState29","_useState30","setTableHands","endRound","playersDelta","timeout2","OpReady","getWaitingTime","New","restartTimer","handleOnAccept","startRound","isShowAll","Copy","showAll","showNext","simulateOp","startRoundTimer","forceEndRound","getRandomIndex","endRoundTimer","round","myCard","isCloser","takeOffCardByIndex","isEndRound","greens","countGreens","price","countWinningPrice","leaveOp","handler","cnt","getShow","my","CHand_CHand","CHand_CTable","CHand_CMyHand","components_Wave","getWaveCode","gamestatus","pathname","DarkModeContext","DarkModeProvider","isDarkMode","setIsDarkMode","switchDarkMode","Account","onCharging","currBalance","setCurrBalance","currXp","setCurrXp","isBalanceCharging","setIsBalanceCharging","isXpCharging","setIsXpCharging","delting","scale","defaultChecked","ceil","WaitingRoom","top","right","bottom","Online","App","navBarGold","setNavBarGold","context_DialogContext","context_NotificationContext","context_AccountContext","context_CodeContext","src_components_Account","val","context_OnlineContext","react_router_dist","exact","path","element","src_p_home_Home","p_waiting_room_WaitingRoom","p_play_room_CGame","components_Online","ReactDOM","createRoot","document","getElementById","render","StrictMode","context_DarkModeContext","src_App"],"mappings":"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","file":"static/js/main.bd8c9760.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"PduyA2x5bVVFm8khD3AjU\",\"margin\":\"-Ybgvl6lYu1BAx9s0Zq46\",\"rank\":\"_1L8gypHzvKdfnWP_v5w0ds\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divflex\":\"_14GuKWQsysnOigZ38edRyR\",\"table\":\"_3z3b2CYbvBzWXJe28NNKjL\",\"hand\":\"_1DMTE6skffVup0HjbbZkuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handtable\":\"_3JbV29M6s4yAaLUmK6pJ48\",\"timer\":\"_2phrPiC4ETAZ3H2y5SU399\",\"wave\":\"_22E46PPA_LtA-NjyubSCul\",\"info\":\"_1ZFBMhCcyJSUuVakD70szv\",\"sidebar\":\"_26dsF5MFHakkuIPLKGYEx_\",\"home\":\"_2j_K-35aV5VbWyZbuYDBVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"_1M0-VINM6LPFf_yKOukoPY\",\"redTimer\":\"_3swyZaXMINgZdQBpZhgwJO\",\"gameStatusBody\":\"d7VmnFBEOJ4MOj_lq1P4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"I7EojV80RM7Y6VvhWoCRI\",\"flex\":\"wkgj8TPwSJ9AIeZghWGDC\",\"head\":\"_2FnLTjKWhc5JAfdFVexEvj\",\"foot\":\"_15xOZZGjo_6Rq-_38ZXom_\"};","import React, { useState } from \"react\";\r\n\r\nexport const AccountContext = React.createContext();\r\n\r\nconst AccountProvider = ({children}) => {\r\n\r\n    const [balance,setBalance] = useState(getLocalNumber(\"balance\"));\r\n    const [xp,setXp] = useState(getLocalNumber(\"xp\"));\r\n    \r\n    const chargeBalance = (value)=>{\r\n        localStorage.setItem(\"balance\",balance+value);\r\n        setBalance(balance+value);\r\n    }\r\n\r\n    const chargeXp = (value)=>{\r\n        localStorage.setItem(\"xp\",xp+value);\r\n        setXp(xp+value);\r\n    }\r\n\r\n    const value = {\r\n        balance:balance,\r\n        xp:xp,\r\n        chargeBalance:(value)=>chargeBalance(value),\r\n        chargeXp:(value)=>chargeXp(value),\r\n    }\r\n\r\n    return ( \r\n    <AccountContext.Provider value={value}>\r\n        {children}\r\n    </AccountContext.Provider> );\r\n}\r\n\r\nconst getLocalNumber = (str)=>{\r\n    if(!localStorage.getItem(str)) localStorage.setItem(str,0);\r\n    return Number(localStorage.getItem(str));\r\n}\r\n \r\nexport default AccountProvider;","import React from 'react';\r\nimport {useRef} from 'react';\r\nimport \"./Dialog.css\"\r\n\r\nconst InputDialog = ({text,onClose}) => {\r\n\r\n  const inputRef = useRef(\"\");\r\n\r\n  const onSubmit = () =>{\r\n    onClose(inputRef.current.value);\r\n  }\r\n\r\n  return (\r\n    <div >\r\n        \r\n        <div style={{\"zIndex\":100}} className={\"centered dialog-box fade darker-color\"}>\r\n            <button className=\"close-button\" onClick={()=>onClose()}>\r\n              <span role=\"img\" aria-label=\"close\">❌</span>\r\n            </button>\r\n            <div>{text}</div>\r\n            <div style={{\"margin\":\"20px\"}}>\r\n              <input type=\"text\" maxLength=\"15\" ref={inputRef}/>\r\n              <button onClick={onSubmit}>OK!</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default InputDialog;","import React  from 'react';\r\nimport \"./Dialog.css\"\r\n\r\nconst TextDialog = ({title,text,bold,onClose}) => {\r\n\r\n  return (\r\n    <div className=\"fade\">\r\n        <div style={{\"zIndex\":99}} className={\"centered dialog-box darker-color\"}>\r\n            <button className=\"close-button\" onClick={onClose}>\r\n              <span role=\"img\" aria-label=\"close\">❌</span>\r\n            </button>\r\n            <div>{title}</div>\r\n            {text && <div style={{\"marginTop\":\"10px\",fontSize:\"24px\"}}>{text} <b style={{fontSize:\"24px\"}}>{bold}</b></div>}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default TextDialog;","import React, {  useState } from \"react\";\r\nimport InputDialog from \"../components/InputDialog\";\r\nimport TextDialog from \"../components/TextDialog\";\r\n\r\nexport const DialogContext = React.createContext();\r\n\r\nconst DialogProvider = ({children}) => {\r\n\r\n    const [textDialog,setTextDialog] = useState(null);//title text onClose\r\n    const [inputDialog,setInputDialog] = useState(null);//text onClose\r\n\r\n    const handleSetInputDialog=(text,onClose)=>{\r\n        setInputDialog({text:text,onClose:onClose})\r\n    }\r\n\r\n    const handleSetTextDialog=(title,text=null,bold=null)=>{\r\n        setTextDialog({title:title,text:text,bold:bold})\r\n    }\r\n\r\n    const value = {\r\n        textDialog:textDialog,\r\n        setTextDialog:handleSetTextDialog,\r\n        inputDialog:inputDialog,\r\n        setInputDialog:handleSetInputDialog,\r\n        isDialog:inputDialog!==null || textDialog!==null\r\n    }\r\n\r\n    return ( \r\n    <DialogContext.Provider value={value}>\r\n        {children}\r\n        {inputDialog && <InputDialog text={inputDialog.text} onClose={(value) =>{inputDialog.onClose(value);setInputDialog(null);}}/>}\r\n        {textDialog && !inputDialog  && <TextDialog title={textDialog.title} text={textDialog.text} bold={textDialog.bold} onClose={() =>{setTextDialog(null)}}/>}\r\n    </DialogContext.Provider> );\r\n}\r\n \r\nexport default DialogProvider;","import React, { useState } from 'react'\r\nimport { useContext } from 'react';\r\nimport { DialogContext } from './DialogContext';\r\n\r\nexport const NotificationContext = React.createContext();\r\n\r\n//notification center, gaining notifications (notification state)\r\nconst NotificationProvider = ({children})=>\r\n{\r\n    const {setTextDialog} = useContext(DialogContext);\r\n\r\n    const [notification,setNotification] = useState(null);\r\n\r\n    const handleSetNotification = (title,text,bold=null)=>{\r\n        setNotification({title:title,text:text,bold:bold});\r\n    }\r\n\r\n    const handleShowNotification = ()=>{\r\n        setTextDialog(notification.title,notification.text,notification.bold)\r\n        setNotification(null)\r\n    }\r\n\r\n    const value ={\r\n        isNotification:notification!==null,\r\n        setNotification:handleSetNotification,\r\n        showNotification:handleShowNotification,\r\n    }\r\n\r\n    return(\r\n        <NotificationContext.Provider value={value}>\r\n            {children}\r\n        </NotificationContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NotificationProvider;","import React, { useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { AccountContext } from \"./AccountContext\";\r\nimport { DialogContext } from \"./DialogContext\";\r\nimport { NotificationContext } from \"./NotificationContext\";\r\n\r\nconst codes={\r\n    0:\"imnew\",\r\n    1:\"name40\",\r\n    2:\"greenwin\",\r\n    //7:\"777\" //if player win 7 times\r\n}\r\n\r\nconst codesValue={\r\n    \"imnew\":80,\r\n    \"name40\":40,\r\n    \"greenwin\":70,\r\n}\r\n\r\n\r\nexport const CodeContext = React.createContext();\r\n\r\n//usage: see value array\r\nconst CodeProvider = ({children}) => {\r\n\r\n    const {setNotification} = useContext(NotificationContext);\r\n    const {inputDialog,setInputDialog,setTextDialog} = useContext(DialogContext);\r\n    const {chargeBalance} = useContext(AccountContext);\r\n\r\n    const [isCodeDialogOpen,setIsCodeDialogOpen]=useState(null);\r\n\r\n    const verifyCode= (code)=>{\r\n        if(code)\r\n        {\r\n            if(codesValue[code])\r\n            {\r\n                let codeId = codeToCodeId(code);\r\n                if(isCodeUsed(codeId)) setTextDialog(\"You already used this code...\")\r\n                else if(!isCodeToUse(codeId))setTextDialog(\"Are u a cheater?\")\r\n                else\r\n                {\r\n                    addUsedCode(codeId);\r\n                    chargeBalance(codesValue[code]);\r\n                }\r\n            }\r\n            else setTextDialog(\"Unknown code :(\")\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isCodeDialogOpen) setInputDialog(\"Type a secret code:\",verifyCode)\r\n    },[isCodeDialogOpen])\r\n\r\n    const handleOpenCode=()=>{\r\n        if(!isCodeDialogOpen) setIsCodeDialogOpen(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!inputDialog) setIsCodeDialogOpen(false);\r\n    },[inputDialog])\r\n\r\n    const handleSaveCode=(codeId,description)=>{\r\n        if(codes[codeId])\r\n        {\r\n            if(!isCodeToUse(codeId)) addCodeToUse(codeId);\r\n            setNotification(description,\"Use code: \",codes[codeId]);\r\n        }else console.log(\"Save code failed\")\r\n    }\r\n\r\n    const addCodeToUse = (codeId)=>{\r\n        let code = codes[codeId];\r\n        let a = localStorage.getItem(\"codesToUse\");\r\n        let arr = JSON.parse(a);\r\n        if(arr){ arr.push(code); }\r\n        a = arr ? JSON.stringify(arr) : JSON.stringify([code]);\r\n        localStorage.setItem(\"codesToUse\",a);\r\n    }\r\n\r\n    const addUsedCode = (codeId)=>{\r\n        let code = codes[codeId];\r\n        let a = localStorage.getItem(\"usedCodes\");\r\n        let arr = JSON.parse(a);\r\n        if(arr){ arr.push(code); }\r\n        a = arr ? JSON.stringify(arr) : JSON.stringify([code]);\r\n        localStorage.setItem(\"usedCodes\",a);\r\n    }\r\n    \r\n    //const removeFromCodeToUse - narazie niepotrzebne\r\n\r\n    const isCodeToUse = (codeid)=>{//is code in codesToUse\r\n        let a = localStorage.getItem(\"codesToUse\");\r\n        if(!a) return false;\r\n        a = JSON.parse(a);\r\n        return a.includes(codes[codeid])\r\n    }\r\n\r\n    const isCodeUsed= (codeid)=>{//is code in usedCodes\r\n        let a = localStorage.getItem(\"usedCodes\");\r\n        if(!a) return false;\r\n        a = JSON.parse(a);\r\n        return a.includes(codes[codeid])\r\n    }\r\n\r\n    const codeToCodeId=(code)=>{\r\n        return Object.keys(codes).find(id => codes[id] === code);\r\n    }\r\n\r\n    const value = {\r\n        isCodeDialogOpen:isCodeDialogOpen,\r\n        openCodeDialog:handleOpenCode,\r\n        saveCode:handleSaveCode,\r\n        isCodeUsed:isCodeUsed\r\n    }\r\n\r\n    return ( \r\n        <CodeContext.Provider value={value}>\r\n            {children}\r\n        </CodeContext.Provider> );\r\n}\r\n\r\nexport default CodeProvider","import React from 'react';\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport { DialogContext } from '../context/DialogContext';\r\n\r\nclass Name extends React.Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {name: \"\"};\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if(this.props.myname) this.setState({name:this.getMyName()})\r\n        else this.setState({name: this.getRandomName(true)})\r\n    }\r\n\r\n    getRandomName = (includeCustom)=>\r\n    {\r\n        if(includeCustom && this.getRandom(3)!==1) return customNames[this.getRandom(customNames.length)];\r\n        return \"Player\"+this.getRandom(1000);\r\n    }\r\n\r\n    getRandom(range)\r\n    {\r\n        return Math.floor( Math.random()*range);\r\n    }\r\n\r\n    getMyName= ()=> {\r\n        let name = localStorage.getItem(\"name\");\r\n        if(!name) \r\n        {\r\n            name = this.getRandomName(false);\r\n        }\r\n\r\n        return name;\r\n    }\r\n\r\n    setMyName = (name)=> {\r\n        if(!localStorage.getItem(\"name\"))\r\n            this.props.codeContext.saveCode(1,\"Congrats you set your name!\")\r\n            \r\n        localStorage.setItem(\"name\",name);\r\n        this.setState({name:name})\r\n    }\r\n    \r\n    handleOnClick = ()=>{\r\n        this.context.setInputDialog(\"Change your name\",(name)=>{if(name && name!==\"\")this.setMyName(name)});\r\n    }\r\n\r\n    /*\r\n    convert(string)\r\n    {\r\n        if(string.length>10) return string.slice(0,7)+\"...\"\r\n        return string;\r\n    }\r\n    */\r\n\r\n    render()\r\n    { \r\n        return (\r\n            <ins className={this.props.clickable?\"hoverable underline\":\"\"} style={{\"fontWeight\":(this.props.bold?\"bold\":\"none\")}}\r\n            onClick={()=>{if(this.props.clickable)this.handleOnClick()}} >\r\n                {this.state.name}\r\n            </ins>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\nName.contextType = DialogContext;\r\n\r\nexport const withCodeContext = Component => (\r\n    props => (\r\n      <CodeContext.Consumer>\r\n        {context => <Component codeContext={context} {...props} />}\r\n      </CodeContext.Consumer>\r\n    )\r\n  )\r\n\r\nexport default withCodeContext(Name);\r\n\r\nconst customNames=[\r\n\"Lara Croft\",\r\n\"ElChapo\",\r\n\"Airport Hobo\",\r\n\"Minecraft Steve\",\r\n\"HarrietThugman\",\r\n\"Pinball Tables\",\r\n\"Flack\",\r\n\"Red Rhino\",\r\n\"not_james_bond\",\r\n\"bread_pitt\",\r\n\"Norma Scock\",\r\n\"well_endowed\",\r\n\"averagestudent\",\r\n\"avo_cuddle\",\r\n\"Joyful\",\r\n\"chuck_norris\",\r\n\"abductedbyaliens\",\r\n\"Adobo_Ahai\",\r\n\"Not-Insync\",\r\n\"heisenberg_blue\",\r\n\"PaniniHead\",\r\n\"no_one_cares\",\r\n\"pixie_dust\",\r\n\"manic_pi\",\r\n\"look_mom\",\r\n\"botaccount\",\r\n\"QuarQueen\",\r\n\"Reese_With\",\r\n\"ReeseWithafork\",\r\n\"ImageNotUploaded\",\r\n\"No_Feet_Pics\",\r\n\"wheretomatoes\",\r\n\"TequilaBird\",\r\n\"the_other\",\r\n\"not you\",\r\n\"PaintMeLike\",\r\n\"Hot_Name_Here\",\r\n\"BasicBeach\",\r\n\"thot_patrol\",\r\n\"my_anaconda_does\",\r\n\"kim_chi\",\r\n\"username_copied\",\r\n\"Ariana_Grande\",\r\n\"defasff\"]","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AccountContext } from '../../context/AccountContext';\r\nimport \"./GameBox.css\"\r\n\r\nconst GameBox = ({game,main}) => {\r\n\r\n    const {xp,balance} = useContext(AccountContext);\r\n    const isLock=()=>{return !isBalanceOk() || !isXpOk()}\r\n    const isXpOk=()=>{return game.minXp<=xp}\r\n    const isBalanceOk =()=>{return game.enterPrice<=balance}\r\n    return ( \r\n        <div className={\"forth-color \"+(main?\"main-box\":\"box\")}>\r\n            {isLock() && <span className='info noselect tooltip' role=\"img\" aria-label=\"lock\">🔒\r\n                <span className=\"tooltiptext\">{!isXpOk() ?game.minXp+\"xp +\":\"not enough money\" }</span>\r\n            </span>}\r\n            \r\n            <Link className={main?\"main-head-font\":\"head-font\"} style={{\"textDecoration\":\"none\"}}  to={!isLock()?\"/waiting-room/\"+game.id:\"#\"}>\r\n                <div className={\"third-color \"+(main?\"main-head\":\"head\")}>\r\n                    {game.name}\r\n                    <div>{game.enterPrice}$</div>\r\n                </div>\r\n            </Link>\r\n            <div className={\"foot noselect \" + (main?\"main-foot-font\":\"foot-font\")}>\r\n                <div>{game.bids[0]}...{game.bids[game.bids.length-1]}</div>\r\n                <div>{game.type}</div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GameBox;","export class Game {\r\n  constructor(id,name,rank,firstbid,lastbid,type,minXp,roundTime=30) {\r\n    this.id = id;\r\n    this.rank = rank;\r\n    this.name = name;\r\n\r\n    //hand>=table\r\n    this.handDeckSize = 5;//1-10\r\n    this.tableDeckSize = 5;//1-10\r\n\r\n    this.bids = new Array(this.tableDeckSize).fill(firstbid);\r\n    this.bids[this.tableDeckSize-1]=lastbid;\r\n    \r\n    this.type = type;    \r\n    this.minXp = minXp;\r\n    this.roundTime= roundTime;//in seconds, must be odd number\r\n    \r\n    this.enterPrice = this.bids.reduce((a, b) => a + b, 0)/2;\r\n  }\r\n}\r\n\r\nexport const GameType = {\r\n  HiddenCards:\"HIDDEN\",\r\n  OpenCards:\"OPEN\",\r\n};\r\n\r\nexport const Rank={\r\n  Beginner:\"BEGINNER\",\r\n  Gamer:\"Gamer\",\r\n  Pro:\"PRO\",\r\n}\r\n","import { Game, GameType, Rank } from \"./game\";\r\n\r\nexport const GameSet = {\r\n    games:[\r\n      new Game(0,\"PLAY\",Rank.Beginner,10,20,GameType.HiddenCards,0),\r\n      new Game(1,\"LATER\",Rank.Beginner,20,80,GameType.HiddenCards,100),\r\n      new Game(2,\"EQUAL\",Rank.Beginner,100,100,GameType.HiddenCards,300),\r\n      new Game(3,\"FAST\",Rank.Beginner,200,400,GameType.HiddenCards,500),\r\n      new Game(4,\"OPEN\",Rank.Beginner,300,1200,GameType.OpenCards,900),\r\n      new Game(5,\"PRO\",Rank.Beginner,1000,1000,GameType.OpenCards,1000),\r\n    ],\r\n    getGame:(id)=>GameSet.games[id],\r\n    getGames:(rank)=>GameSet.games.filter(game=>game.rank===rank)\r\n}","import React, { useContext, useEffect } from 'react';\r\n\r\nimport Name from '../components/Name';\r\nimport GameBox from './components/GameBox';\r\n\r\nimport style from \"./Home.css\"\r\nimport { NotificationContext } from '../context/NotificationContext';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { GameType, Rank } from '../models/game';\r\nimport classNames from 'classnames';\r\nimport { GameSet } from '../models/consts';\r\nimport { CodeContext } from '../context/CodeContext';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const {isNotification,showNotification} = useContext(NotificationContext);\r\n    const {saveCode,isCodeUsed} = useContext(CodeContext);\r\n    const {isDialog} = useContext(DialogContext);\r\n\r\n    const currRank=Rank.Beginner;\r\n    const currGames=GameSet.getGames(currRank);\r\n\r\n    useEffect(()=>{\r\n        let timeout = setTimeout(() => {  \r\n            if(!isCodeUsed(0)) saveCode(0,\"Hello new player! Ready to start?\");\r\n        }, 8000);\r\n        return ()=>clearTimeout(timeout);\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(isNotification){\r\n            let timeout = setTimeout(()=>showNotification(),1000);\r\n            return ()=>clearTimeout(timeout)\r\n        } \r\n    },[isNotification])\r\n\r\n    return (\r\n    <div>\r\n        <div className={\"blurable fade \" +classNames({\"blured\":isDialog})}>\r\n        <h1 style={{'textAlign':'center',marginTop:\"50px\"}} >Hello,<Name myname clickable/>!</h1>\r\n        \r\n        <div className={style.flex}>\r\n            \r\n            <div className={style.margin}>\r\n                200$+\r\n                <div className={style.margin}>\r\n                    <GameBox game={currGames[2]}/>\r\n                    <GameBox game={currGames[3]}/>\r\n                </div>\r\n            </div>\r\n            <div className={style.margin} style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\"}}>\r\n                <GameBox game={currGames[0]} main />\r\n                <GameBox game={currGames[1]} />\r\n            </div>\r\n            \r\n            <div className={style.margin}>\r\n                1000$+\r\n                <div className={style.margin}>\r\n                    <GameBox game={currGames[4]}/>\r\n                    <GameBox game={currGames[5]}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        <div className={style.rank}>CURRENT RANK: {currRank}</div>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default Home;","export class Card {\r\n    constructor(color,figure) { \r\n      this.color = color;\r\n      this.figure = figure;\r\n    }\r\n\r\n    equal(card){\r\n      return this.color===card.color && this.figure === card.figure;\r\n    }\r\n\r\n    isCloser(opCard,tableCard)\r\n    {\r\n      let myDelta = Math.abs(this.figure-tableCard.figure);\r\n      let opDelta = Math.abs(opCard.figure-tableCard.figure)\r\n      if(myDelta < opDelta) return true;\r\n      if(myDelta > opDelta) return false;\r\n\r\n      return tableCard.getColorOfColor() === this.getColorOfColor();\r\n    }\r\n    \r\n    getColorOfColor() {\r\n      if(this.color===\"hearts\" || this.color===\"diamonds\") return \"red\"\r\n      return \"black\"\r\n    }\r\n    toString() { return figureToString(this.figure) +\" of \"+ colorToString(this.color); }\r\n    toStringColor() { return colorToString(this.color); }\r\n    toStringFigure() { return figureToString(this.figure); }\r\n}\r\n\r\n//rzutowanie - string\r\nexport const Color = {\r\n    hearts:\"hearts\",\r\n    clubs:\"clubs\",\r\n    diamonds:\"diamonds\",\r\n    spades:\"spades\",\r\n}\r\n\r\n//rzutowanie - porownaniowo latwe\r\nexport const Figure = {\r\n    2:2,\r\n    3:3,\r\n    4:4,\r\n    5:5,\r\n    6:6,\r\n    7:7,\r\n    8:8,\r\n    9:9,\r\n    10:10,\r\n    J:11,\r\n    Q:12,\r\n    K:13,\r\n    A:14,\r\n}\r\n\r\n//local utilities\r\nconst figureToString = (fig)=>{\r\n  switch(fig)\r\n  {\r\n      case Figure[2]: return \"2\";\r\n      case Figure[3]: return \"3\";\r\n      case Figure[4]: return \"4\";\r\n      case Figure[5]: return \"5\";\r\n      case Figure[6]: return \"6\";\r\n      case Figure[7]: return \"7\";\r\n      case Figure[8]: return \"8\";\r\n      case Figure[9]: return \"9\";\r\n      case Figure[10]: return \"10\";\r\n      case Figure.J: return \"jack\";\r\n      case Figure.Q: return \"queen\";\r\n      case Figure.K: return \"king\";\r\n      case Figure.A: return \"ace\";\r\n      default: return \"\";\r\n  }\r\n}\r\n\r\nconst colorToString = (col)=>{\r\n  switch(col)\r\n  {\r\n      case Color.hearts: return \"Hearts\";\r\n      case Color.clubs: return \"Clubs\";\r\n      case Color.diamonds: return \"Diamonds\";\r\n      case Color.spades:return \"Spades\";\r\n      default: return \"\";\r\n  }\r\n}","import { Card, Color, Figure } from \"./cards\";\r\n\r\nexport class HandDeck //ex. [card, card, null, null, card]\r\n{\r\n  constructor(size,color,handDeck)//tego nie uzywamy\r\n  {\r\n    this.cards = !handDeck ? getRandomHandCards(size,color) : handDeck.getCards();\r\n  }\r\n\r\n  static New(size,color){\r\n    return new HandDeck(size,color,null);\r\n  }\r\n\r\n  static Copy(handdeck){\r\n    return new HandDeck(null,null,handdeck);\r\n  }\r\n\r\n  //cards\r\n  getCard(id){return this.cards[id];}\r\n  getCards(){return this.cards;}\r\n  isCard(card){return this.cards.filter(a=>a.equal(card)).length !== 0}\r\n  takeOffCardByIndex(index){\r\n    this.cards[index]= null;\r\n    return this;\r\n  }\r\n  getCardsLength(){return this.getCards().filter(a=>a!==null).length}\r\n  getCardsSize(){return this.cards.length;}\r\n\r\n  //\r\n  getRandomIndex(){\r\n    //random number\r\n    let len=this.getCardsLength();\r\n    if(len===0){console.log(\"wrong use\");return -1;}\r\n\r\n    let rand = getRandom(len);\r\n\r\n    for(let index =0;index<this.getCardsSize();index++)\r\n    {\r\n      if(this.cards[index]!==null) \r\n      {\r\n        if(rand===0) return index;\r\n        rand--;\r\n      }\r\n    }\r\n    console.log(\"wrong use\");\r\n    return -1;\r\n  }\r\n}\r\n\r\nexport class TableDeck\r\n{\r\n  constructor(size,handDeck1,handDeck2,tableDeck)\r\n  {\r\n    this.cards = !tableDeck ? getRandomTableCards(size,handDeck1,handDeck2) : this.cards = tableDeck.toArray();\r\n  }\r\n\r\n  static New(size,handDeck1,handDeck2){\r\n    return new TableDeck(size,handDeck1,handDeck2,null);\r\n  }\r\n\r\n  static Copy(tableDeck){\r\n    return new TableDeck(null,null,null,tableDeck);\r\n  }\r\n\r\n  getCard(id){return this.cards[id];}\r\n  getCards(){return this.cards;}\r\n\r\n  getWaveCode()\r\n  {\r\n    let res = new Array(this.cards.length-1);\r\n    \r\n    let prevFigure=null;\r\n    this.cards.forEach((card,i) => {\r\n      if(prevFigure!==null) \r\n      {\r\n        if(card.figure===prevFigure) res[i-1]=null;\r\n        else res[i-1] = card.figure-prevFigure>0;\r\n      }\r\n      prevFigure=card.figure;\r\n    });\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\n//local\r\nvar getRandomHandCards = function(size,color)\r\n{\r\n  if(size>= Figure.length * Color.length) {console.log(\"size too high\");return [];}\r\n\r\n  let res = [];\r\n  while(res.length !== size)\r\n  {\r\n    let temp = new Card(getRandomColor(color),getRandomFigure());\r\n    if(res.filter((card)=>card.equal(temp)).length===0) res.push(temp);\r\n  }\r\n  return res;\r\n}\r\n\r\nvar getRandomTableCards = function(size,handDeck1,handDeck2)\r\n{\r\n  if(size>= Figure.length * Color.length) {console.log(\"size too high\");return [];}\r\n\r\n  let res = [];\r\n  while(res.length !== size)\r\n  {\r\n    let temp = new Card(getRandomColor(),getRandomFigure());\r\n    if(res.filter((card)=>card.equal(temp)).length===0 && !handDeck1.isCard(temp) && !handDeck2.isCard(temp)) \r\n    {\r\n      res.push(temp);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nconst getRandom =(range)=>{//return number between 0 - (range-1)\r\n  return Math.floor(Math.random()*range);\r\n}\r\n\r\n//local of local\r\n\r\nvar getRandomFigure = function () {\r\n  var keys = Object.keys(Figure);\r\n  return Figure[keys[ keys.length * Math.random() << 0]];\r\n};\r\n\r\nvar getRandomColor = function (color=null) {//red or black colors\r\n  if(color ) return (Math.floor(Math.random()*2)===0)? (color===\"red\"?\"hearts\":\"clubs\"):(color===\"red\"?\"diamonds\":\"spades\")\r\n  \r\n  var keys = Object.keys(Color).filter(key=>color? Color[key]===color:true);\r\n  let a = Color[keys[ keys.length * Math.random() << 0]];\r\n  return a;\r\n};\r\n\r\n\r\n/* OLD CLASS DECK - maybe willlll be usefull\r\n\r\nexport class Deck {\r\n    constructor(redDeck,blackDeck) {//custom initialize deck | Deck = FullDeck - deck1 - deck2\r\n      this.cards = [];\r\n\r\n      let card;\r\n      for (const color of Object.keys(Color))\r\n      {\r\n        if(color === \"Red\")\r\n        {\r\n          for (const figure of Object.keys(Figure)) \r\n          {\r\n            card=new Card(color,figure);\r\n            if(!redDeck.includes(card)) this.cards.push(card);\r\n          }\r\n        }\r\n        else\r\n        {\r\n          for (const figure of Object.keys(Figure)) \r\n          {\r\n            card=new Card(color,figure);\r\n            if(!blackDeck.includes(card)) this.cards.push(card);\r\n          }\r\n        }\r\n      }\r\n      shuffleArray(this.cards);\r\n    }\r\n\r\n    getOneCard()\r\n    {\r\n      return this.cards.pop();\r\n    }\r\n}\r\n\r\nfunction shuffleArray(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n}\r\n*/","import React from \"react\"\r\n\r\nconst Status = ({status}) => {\r\n    if(status===null) return <ins><span role=\"img\" aria-label=\"dot\">⚪⚪</span></ins>\r\n    if(status===false) return <ins><span role=\"img\" aria-label=\"dot\">⚪🔴</span></ins>\r\n    return <ins><span role=\"img\" aria-label=\"dot\">🟢⚪</span></ins>\r\n}\r\n \r\nexport default Status;","import React from \"react\";\r\nimport Status from \"./status\";\r\nimport style from './local.css'\r\n\r\nconst GameStatus = ({bids,gameStatus}) => {\r\n\r\n    const getStatus=(index)=>{\r\n        if(!gameStatus)return null;\r\n        return gameStatus.length>index ? gameStatus[index] : null;\r\n    }\r\n\r\n    return ( <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n        <div>GAME STATUS</div>\r\n        <div className={style.gameStatusBody}>\r\n            {bids.map((bid,index) =>\r\n            <div key={index}>\r\n                <div>{bid}$</div>\r\n                <Status status={getStatus(index)}/> </div>\r\n            )}\r\n        </div>\r\n    </div> );\r\n}\r\n \r\nexport default GameStatus;","\r\nimport React from 'react';\r\nimport { Color, Figure } from '../../models/cards';\r\n\r\nexport const CCard = ({card,isFlipped,onClick}) => {\r\n    \r\n    return ( \r\n        <div className={'flip-card scale-hoverable'} onClick={onClick} style={{transform: (isFlipped? \"rotateY(180deg)\":\"\")}} >\r\n            \r\n            <div className={'flip-card-front'}>\r\n                <img \r\n                src={getPath(card,false)} \r\n                alt={card.toString()}></img>\r\n            </div>\r\n           \r\n            <div className='flip-card-back'>\r\n                <img\r\n                src={getPath(card,true)} \r\n                alt={\"Flipped card\"}></img>\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n}\r\n\r\nexport const MiniCard = ({style,index}) => {\r\n    const {height,...globalStyle} = style;\r\n    const getTransfrom=()=>{\r\n        return \"translate(-50%,-65%)\"\r\n    }\r\n    return (\r\n        <div className='scale-hoverable relative' style={globalStyle} >\r\n            <img style={{height,opacity:\"0.8\"}} src={getPath()} alt={\"Mini card\"}></img>\r\n            <div className='centered' style={{fontWeight:\"bold\",fontSize:\"20px\",transform:getTransfrom()}}>{index}</div>\r\n        </div>)\r\n}\r\n// local\r\n\r\n//niewykorzystywany ? na odwrocie ... moze kiedys. (flip-q)\r\nconst prepath = \"/asset-cards-cute\" //row: 1-trefl , 2-karo , 3-pik , 4-kier\r\nconst getPath = (card=null,isFlipped=null)=>\r\n{\r\n    if(card===null) return process.env.PUBLIC_URL + [prepath,\"flip-empty\"].join(\"/\")+\".png\";\r\n    if(isFlipped) return process.env.PUBLIC_URL + [prepath,\"flip-\"+card.getColorOfColor()].join(\"/\")+\".png\";\r\n    \r\n    return process.env.PUBLIC_URL + [prepath,[\"row\",colorToRowNumber(card.color),\"column\",figureToColumnNumber(card.figure)].join(\"-\")].join(\"/\")+\".png\";\r\n}\r\n\r\n//local of local\r\nconst colorToRowNumber =(color)=>\r\n{\r\n    switch(color)\r\n    {\r\n        case Color.hearts: return 4;\r\n        case Color.clubs: return 1;\r\n        case Color.diamonds: return 2;\r\n        case Color.spades:return 3;\r\n        default: return 1;\r\n    }\r\n}\r\nconst figureToColumnNumber = (fig)=>{\r\n    return ((fig-1) % (Object.keys(Figure).length))+1\r\n}\r\n\r\n/*\r\nconst prepath = \"/asset-cards-basic\"\r\nconst getPath = (card,isFlipped)=>{\r\n    if(isFlipped) return [prepath,\"flipped\",card.toStringFlipSign()].join(\"/\")+\".png\";\r\n    return [prepath,[card.toStringFigure(),\"of\",card.toStringColor()].join(\"_\")].join(\"/\")+\".png\";\r\n}\r\n\r\n//const test = \"/asset-cards-bnw/flip-black/Flipped_black.png\"\r\n\r\nconst getPath = (card,isDarkMode,isFlipped)=>{\r\n    let mode = isDarkMode?\"black\":\"white\"\r\n    if(isFlipped) return [prepath,\"flip-\"+mode,[card.toStringFlipSign(),mode].join(\"_\")].join(\"/\")+\".png\";\r\n    return [prepath,mode,[card.toStringColor(),card.toStringFigure(),mode].join(\"_\")].join(\"/\")+\".png\";\r\n}\r\n*/","import React, { useRef, useState } from \"react\";\r\nimport {CCard } from \"./CCard\";\r\nimport style from './CHand.css'\r\nimport { useEffect } from \"react\";\r\n\r\nexport const CHand = ({initSize,handDeck,flop,isAcceptable,show={index:-1,isActive:false,cardPreview:false}}) => {\r\n    //handDeck nullable, ex. [null,card,card,null,null], state\r\n    //flop nullable, ex. [false,true,true,false,false], state\r\n    //show - index, isActive, cardPreview\r\n\r\n    const isNull = (id)=>{ //zalezne tylko od handdeck\r\n        if(!handDeck || !flop) return null;\r\n        return handDeck.getCard(id);\r\n    }\r\n\r\n    const getOpacity = ()=>{\r\n        return (!isAcceptable && !show.isActive?\"0.5\":\"1\")\r\n    }\r\n\r\n    const getCardOpacity = (index)=>{\r\n        return ((show.isActive && show.index!==index) ?\"0.5\":\"1\")\r\n    }\r\n\r\n    const getTranform =(index)=>{\r\n        return \"translate(0,\"+((index===show.index && show.cardPreview) ?\"25px\":\"0\")+\") \"\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.divflex+\" \" +style.hand+\" forth-color\"} style={{opacity:getOpacity()}}>\r\n                { new Array(initSize).fill(0).map((_,index) => \r\n                    <div key={index}>\r\n                        <div style={{transition:\"transform 0.2s ease-in\",\r\n                        transform:getTranform(index),\r\n                        opacity:getCardOpacity(index)}}>\r\n\r\n                        {isNull(index) && <CCard card={handDeck.getCard(index)} isFlipped={flop.getFlip(index)}/> }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n         );\r\n}\r\n\r\n\r\n\r\nexport const CMyHand = ({initSize,handDeck,flop,isAcceptable,onAccept,show={index:-1,isActive:false,cardPreview:true},enterPrice}) => { \r\n    //isAcceptable-state ,\r\n    //handDeck nullable, ex. [null,card,card,null,null], state\r\n    //flop nullable, ex. [false,true,true,false,false], state\r\n    //show - index, isActive,cardPreview\r\n\r\n    const [orders,setOrders] = useState([...Array(initSize).keys()]);//cardIndex = orders[boxid] \r\n    const [toggledCardIndex,setToggledCardIndex] = useState(null);\r\n\r\n    useEffect(()=>{if(isAcceptable===false) setToggledCardIndex(null)},[isAcceptable])\r\n\r\n    const handleToggle = (index)=>{\r\n        if(index===toggledCardIndex) setToggledCardIndex(null);\r\n        else setToggledCardIndex(index);\r\n    }\r\n    const handleAccept = (index)=>{\r\n        onAccept(index);\r\n    }\r\n\r\n    const isNull = (id)=>{ //zalezne tylko od handdeck\r\n        if(!handDeck || !flop) return null;\r\n        return handDeck.getCard(id);\r\n    }\r\n\r\n    const getOpacity = ()=>{\r\n        return (!isAcceptable && !show.isActive?\"0.5\":\"1\")\r\n    }\r\n\r\n    const getCardOpacity = (index)=>{\r\n        return (isAcceptable || (show.isActive && show.index===index) ?\"1\":\"0.5\")\r\n    }\r\n\r\n    const getTranform =(index)=>{\r\n        return \"translate(0,\"+((index===toggledCardIndex \r\n            || (show.cardPreview===null && index===show.index)\r\n            || (show.cardPreview===true && index===show.index)) ?\"-25px\":\"0\")+\") \"\r\n    }\r\n    \r\n    //drag and drop\r\n    const dragItem = useRef(null); //zapisywane jest boxid\r\n    const dragOverItem = useRef(null); //zapisywane jest boxid\r\n    const trySwitchOrder = ()=>{\r\n        if(!isAcceptable) return;\r\n        if(dragItem.current===null) return;\r\n        if(dragOverItem.current===null) return;\r\n\r\n        let boxid1 =dragItem.current;\r\n        let boxid2= dragOverItem.current;\r\n        let arr = [...orders];\r\n        [arr[boxid1],arr[boxid2]] = [arr[boxid2],arr[boxid1]]\r\n        setOrders(arr);\r\n\r\n        dragItem.current = null;\r\n        dragOverItem.current = null\r\n    }\r\n\r\n    return ( <div style={{display:\"flex\",alignItems:\"center\"}}  >\r\n        <div className={style.divflex+\" \"+style.hand+\" forth-color\"} style={{opacity:getOpacity()}}>\r\n            { orders.map((cardIndex,index)=>\r\n            <div key={index} \r\n            onDragStart={()=>{dragItem.current = index}}\r\n            onDragEnter={()=>{dragOverItem.current = index}}\r\n            onDragEnd={trySwitchOrder}\r\n            >\r\n                    {isNull(cardIndex) && \r\n                    <div style={{\r\n                        position:\"relative\",\r\n                        transition:\"transform 0.2s ease-in\",\r\n                        transform:getTranform(cardIndex),\r\n                        opacity:getCardOpacity(cardIndex)\r\n                        }}>\r\n                    <CCard\r\n                        card={handDeck.getCard(cardIndex)}\r\n                        isFlipped={flop.getFlip(cardIndex)}\r\n                        onClick={()=>{if(isAcceptable)handleToggle(cardIndex)}}\r\n                    />\r\n\r\n                    <button \r\n                    className=\"hoverable\"\r\n                    style={{ \r\n                    fontSize:\"16px\",fontWeight:\"bold\",border:\"black 3px solid\",borderRadius:\"15px 15px 0px 0px\",backgroundColor:\"rgb(144, 238, 144)\",\r\n                    position:\"absolute\",left: \"50%\",transform: \"translate(-50%, 0)\",marginTop:\"-7px\",zIndex:-1,\r\n                    opacity:(cardIndex===toggledCardIndex ?\"1\":\"0\"),\r\n                    transition:\"height 0.2s ease-in\",\r\n                    height:(cardIndex===toggledCardIndex?\"30px\":\"0\"),\r\n                    }}\r\n                    onClick={()=>handleAccept(cardIndex)}>ACCEPT</button>\r\n                    </div> }\r\n            </div>\r\n            )}\r\n            {!handDeck && isAcceptable && <button className=\"hoverable\" style={{position:\"absolute\",height:\"auto\",alignSelf:\"center\"}} \r\n            onClick={onAccept} disabled={!isAcceptable}>PAY ENTRANCE ({enterPrice}$)</button>}\r\n        </div>  \r\n    </div> );\r\n}\r\n\r\nexport const CTable = ({initSize,tableDeck,flop,tableHands}) => {\r\n    //tableDeck nullable, ex. [null,card,card,null,null], state\r\n    //flop nullable, ex. [false,true,true,false,false], state\r\n    //tableHands state ex.[{up:card,down:card},...]\r\n\r\n    const isNull = (id)=>{ //zalezne tylko od handdeck\r\n        if(!tableDeck || !flop) return null;\r\n        return tableDeck.getCard(id);\r\n    }\r\n\r\n    const isTableHand = (index,isup)=>{\r\n        if(!tableHands || tableHands.length<=index) return false;\r\n        return isup ? tableHands[index].up!==null : tableHands[index].down!==null;\r\n    }\r\n    \r\n    return (\r\n        <div className={style.divflex+\" \"+style.table+\" forth-color\"}>\r\n            { new Array(initSize).fill(0).map((_,index) =>(\r\n                <div key={index}>\r\n                    {isNull(index) && <CCard mini card={tableDeck.getCard(index)} isFlipped={flop.getFlip(index)} /> }\r\n                    {isTableHand(index,true) && <CCard minimini card={tableHands[index].up} isFlipped={false} />}\r\n                    {isTableHand(index,false) && <CCard minimini card={tableHands[index].down} isFlipped={false} />}\r\n                </div>\r\n            ))}\r\n        </div>\r\n         );\r\n}\r\n","export class Flop //ex. [true,false,true,true,false]\r\n{\r\n  constructor(size,flop)//tego nie uzywamy\r\n  {\r\n    this.flips = !flop ? new Array(size).fill(true) : flop.getFlips();\r\n  }\r\n\r\n  static New(size){\r\n    return new Flop(size,null);\r\n  }\r\n\r\n  static Copy(flop){\r\n    return new Flop(null,flop);\r\n  }\r\n\r\n  getFlips(){return this.flips;}\r\n  getFlip(index){return this.flips[index]}\r\n  isShowAll(){\r\n    let res = true;\r\n    this.flips.forEach(flip => { if(flip)res=false; });\r\n    return res;\r\n  }\r\n  show(index){this.flips[index]=false;return this;}\r\n  showOnly(index)\r\n  {\r\n    for(let i =0;i<this.flips.length;i++)\r\n    {\r\n      if(i===index) this.flips[i]=false;\r\n      else this.flips[i]=true;\r\n    }\r\n    return this;\r\n  }\r\n  showAll(){this.flips =new Array(this.flips.length).fill(false);return this}\r\n  showNext(){\r\n    \r\n    let id = 0;\r\n    while(this.flips[id]===false && this.flips.length!==id)id++;\r\n    if(this.flips.length!==id) this.flips[id]=false;\r\n    \r\n    return this;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport style from './local.css'\r\n\r\nconst Timer = ({sets,onEnd}) => { // {time,reset,dotted=null}\r\n    \r\n    const [time,setTime]=useState(0);\r\n    const [isRed,setIsRed]=useState(false);\r\n    const isDotted=useRef(false);\r\n\r\n    useEffect(()=>{\r\n        if(!sets)return;\r\n        \r\n        if(sets.reset)\r\n        {\r\n            if(isRed) setIsRed(false);\r\n            isDotted.current=sets.dotted?sets.dotted:false;\r\n            let interval =startTimer(sets.time);\r\n            return ()=>clearInterval(interval);\r\n        }\r\n        else if(sets.time< time) \r\n        {\r\n            setIsRed(true);\r\n            let interval =startTimer(sets.time);\r\n            return ()=>clearInterval(interval);\r\n        }\r\n    },[sets]);\r\n\r\n    const startTimer=(time)=>{\r\n        let curr = time;\r\n        setTime(curr);\r\n        let interval = setInterval(()=>{\r\n            setTime(--curr);\r\n            if(curr===0)\r\n            {\r\n                clearInterval(interval);\r\n                onEnd();\r\n            }\r\n        },1000);\r\n        return interval\r\n    }\r\n\r\n    const getTimerFormat=()=>{\r\n        if(isDotted.current) return \".\".repeat(time);\r\n        return time?(time+\"s\"):\"TIMER\";\r\n    }\r\n    \r\n    return ( <div className={\"darker-color forth-color \"+style.timer+\" \"+(isRed?style.redTimer:style.defaultTimer)} >{getTimerFormat()} </div> );\r\n}\r\n \r\nexport default Timer;\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nconst consts={\r\n    refreshTime:10,\r\n    initTotalPlayers:420,\r\n    initTotalPlayersDelta:100,\r\n    initGamePlayers:100,\r\n    initGamePlayersDelta:20,\r\n    totalPlayersDelta:5,\r\n    gamePlayersDelta:4,\r\n}\r\n\r\nexport const OnlineContext = React.createContext();\r\n\r\nconst OnlineProvider = ({children})=>\r\n{\r\n    const [gamePlayers,setGamePlayers] = useState(getInitGamePlayers());// {red, black}\r\n    const [totalPlayers,setTotalPlayers] = useState(getInitTotalPlayers());\r\n\r\n    useEffect(() => {\r\n        var initTotalPlayers = totalPlayers;\r\n        var initGamePlayers = gamePlayers;\r\n\r\n        const interval = setInterval(() => {\r\n\r\n            //total\r\n            let rand = getRandom(consts.totalPlayersDelta);\r\n            if(totalPlayers>initTotalPlayers) setTotalPlayers(totalPlayers-rand)\r\n            else setTotalPlayers(totalPlayers+rand);\r\n\r\n            //game\r\n            let red = gamePlayers.red;\r\n            let black = gamePlayers.black;\r\n            rand = getRandom(consts.gamePlayersDelta);\r\n            if(red+black > initGamePlayers.red+initGamePlayers.black)\r\n            {\r\n                if(red>black)  setGamePlayers({red:red-rand,black:black})\r\n                else setGamePlayers({red:red,black:black-rand})\r\n            }\r\n            else\r\n            {\r\n                if(red>black)  setGamePlayers({red:red,black:black+rand})\r\n                else setGamePlayers({red:red,black:black+rand})\r\n            }\r\n            \r\n        }, consts.refreshTime*1000);\r\n\r\n        return () => clearInterval(interval)\r\n      }, []);\r\n    \r\n\r\n    return(\r\n        <OnlineContext.Provider value={{gamePlayers,totalPlayers}}>{children}</OnlineContext.Provider>\r\n    )\r\n}\r\n\r\nexport default OnlineProvider;\r\n\r\n//local\r\n\r\nconst getInitGamePlayers =()=> {\r\n    let all = consts.initGamePlayers+getRandomDelta( consts.initGamePlayersDelta);\r\n    return {red:Math.floor(all/2),black:Math.floor(all/2)}\r\n}\r\n\r\nconst getInitTotalPlayers =()=> {\r\n    return consts.initTotalPlayers+ getRandomDelta(consts.initTotalPlayersDelta)\r\n}\r\n\r\n//local of local\r\n\r\nconst getRandom =(range)=>{//return number between 0 - (range-1)\r\nreturn Math.floor(Math.random()*range);\r\n}\r\n\r\nconst getRandomDelta =(delta)=>{//return number between 0 - (range-1)\r\nreturn -delta + getRandom(delta*2)\r\n}","import React from \"react\";\r\nimport { MiniCard } from \"./CCard\";\r\n\r\n//main\r\nconst boxHeight = 134; //in px (144-boxPadding)\r\nconst cardHeight=50;//in px; boxHeight > cardHeight\r\nconst minCardWidth=40//in px; orginalna karta ma 144x100 wiec z proporcji...\r\n\r\n//details\r\nconst boxPadding = 5;\r\nconst cardMargin = 5;//in px\r\n\r\n//Wave\r\nconst Wave = ({size,code=null}) => {\r\n    //code: [true,false,false,null] - rosnie,maleje,maleje,stoi,maleje\r\n    //code.length+1 === size !!!\r\n\r\n    const getCardStyle=(delta=null,index=null)=>{return{\r\n        marginLeft:(index===0?\"0px\":cardMargin),\r\n        height:cardHeight+\"px\",\r\n        transform:\"translateY(\"+(-delta*getDeltaSpace())+\"px)\",\r\n    }}\r\n    const getBoxStyle=()=>{return{\r\n        padding:(boxPadding+\"px\"),\r\n        height:(boxHeight+\"px\"), //max height\r\n        width:getBoxWidth()+\"px\",\r\n    }}\r\n\r\n    // [true,false,false,null] => [0,1,0,-1,-1] => - || -\r\n    // [true,true,true,null] => [0,1,2,3,3] => [-2,-1,0,1,1]\r\n    // [false,false,false,false] => [0,-1,-2,-3,-4] => [2,1,0,-1,-2 ]\r\n    const getDeltaArray=()=>{\r\n        let res = new Array(size);\r\n        \r\n        //1=>2\r\n        res[0]=0;\r\n        code.forEach((c,i) => {\r\n            res[i+1]= res[i]+(c===null?0:(c?1:-1))\r\n        });\r\n\r\n        //2=>3\r\n        let max = Math.max(...res);\r\n        let min = Math.min(...res);\r\n        let distance = max+Math.abs(min);//max is always positive\r\n        let shift = Math.floor(distance/2);\r\n        if(max>Math.abs(min)) res= res.map(a=>a-shift);\r\n        else res = res.map(a=>a+shift);\r\n        \r\n        return res;\r\n    }\r\n\r\n    //local\r\n    const getDeltaSpace=()=>{\r\n        return Math.floor((boxHeight-cardHeight)/(size-1));\r\n    }\r\n    const getBoxWidth=()=>{\r\n        return minCardWidth*size + cardMargin*(size-1)\r\n    }\r\n\r\n    return ( \r\n    <div className='wave-box forth-color' style={getBoxStyle()}>\r\n        {code && getDeltaArray().map((delta,i)=>(\r\n            <MiniCard key={i} style={getCardStyle(delta,i)} index={i+1}></MiniCard>\r\n        ))}\r\n    </div> );\r\n}\r\n \r\nexport default Wave;","import React, { useRef }  from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { HandDeck, TableDeck} from '../models/decks';\r\nimport { useState } from 'react';\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport GameStatus from './components/gamestatus';\r\nimport { CHand, CMyHand, CTable } from './components/CHand';\r\nimport {Flop} from '../models/flops'\r\nimport { GameType } from '../models/game';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { AccountContext } from '../context/AccountContext';\r\nimport Timer from './components/timer';\r\nimport { GameSet } from '../models/consts';\r\nimport style from './local.css'\r\nimport classNames from 'classnames';\r\nimport Name from '../components/Name';\r\nimport { OnlineContext } from '../context/OnlineContext';\r\nimport { Link } from 'react-router-dom';\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport Wave from './components/Wave';\r\n\r\nconst test = false;\r\n\r\nconst CGame = () => {\r\n\r\n    //phases: ready-startround-accept-endround\r\n    \r\n    const {isDialog,setTextDialog}  = useContext(DialogContext)\r\n    const {balance,chargeBalance,chargeXp}           = useContext(AccountContext);\r\n    const {isCodeUsed,saveCode}     = useContext(CodeContext);\r\n    const {gamePlayers}             = useContext(OnlineContext);\r\n\r\n    const { id, myColor } = useParams();\r\n    const game = GameSet.getGame(id);\r\n\r\n    const [myHandDeck,setMyHandDeck] = useState(null);\r\n    const [opHandDeck,setOpHandDeck] = useState(null);\r\n    const [tableDeck,setTableDeck] = useState(null);\r\n    const [myFlop,setMyFlop] = useState(null);//useless troche ale no.\r\n    const [opFlop,setOpFlop] = useState(null);\r\n    const [tableFlop,setTableFlop] = useState(null);\r\n\r\n    const [isAcceptable,setIsAcceptable] = useState(false);\r\n    const [isOpAcceptable,setIsOpAcceptable] = useState(false);\r\n    const [isOpPresent,setIsOpPresent] = useState(false);\r\n    const [myAcceptedIndex,setMyAcceptedIndex]=useState(null);//=> isAccpetable=true\r\n    const [opAcceptedIndex,setOpAcceptedIndex]=useState(null);//=> isAccpetable=true\r\n\r\n    const opSimulation= useRef(null);\r\n\r\n    const [timerSets,setTimerSets] = useState(null);  \r\n    const handleTimerEndString = useRef(\"null\");  \r\n\r\n    const [isShow,setIsShow]=useState(false);\r\n\r\n    const [gameStatus,setGameStatus]=useState([]);//true -myWin, false- opWin //can get round info\r\n    const [tableHands,setTableHands]=useState([]);// {up:card, down:card} \r\n\r\n    useEffect(()=>{\r\n        if(myAcceptedIndex!==null && opAcceptedIndex!==null) endRound();\r\n        else if(myAcceptedIndex!==null || opAcceptedIndex!==null) setTimerSets({time:game.roundTime/2})\r\n\r\n        if(myAcceptedIndex!==null && isAcceptable)setIsAcceptable(false);\r\n        if(opAcceptedIndex!==null && isOpAcceptable)setIsOpAcceptable(false);\r\n    },[myAcceptedIndex,opAcceptedIndex])\r\n\r\n    useEffect(()=>{\r\n        if(!test)\r\n        {\r\n            let playersDelta = (myColor===\"red\"? gamePlayers.black-gamePlayers.red : gamePlayers.red-gamePlayers.black)\r\n            const timeout = setTimeout(()=>{\r\n                setIsOpAcceptable(true);//for ready button\r\n                setIsAcceptable(true);//for ready button\r\n                setIsOpPresent(true);\r\n                const timeout2 = setTimeout(()=>{OpReady()},1000*(3+getRandom(3)));//op player ready (3-5s)\r\n                return ()=>clearTimeout(timeout2);\r\n    \r\n            },1000*getWaitingTime(playersDelta));\r\n            return ()=>clearTimeout(timeout);\r\n        }\r\n        else\r\n        {\r\n            setIsOpAcceptable(true);\r\n            setIsAcceptable(true);\r\n            setIsOpPresent(true);\r\n            OpReady()\r\n        }\r\n        \r\n    },[]);\r\n\r\n    const IReady = ()=>{ \r\n        setIsAcceptable(false);//ready button\r\n        setMyHandDeck(HandDeck.New(game.handDeckSize,myColor)); \r\n        setMyFlop(Flop.New(game.handDeckSize));\r\n    }\r\n    const OpReady = ()=>{\r\n        setIsOpAcceptable(false);//ready button\r\n        setOpHandDeck(HandDeck.New(game.handDeckSize,myColor===\"red\"?\"black\":\"red\")); \r\n        setOpFlop(Flop.New(game.handDeckSize));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(myHandDeck && opHandDeck && !tableDeck)\r\n        {\r\n            setTableDeck(TableDeck.New(game.tableDeckSize,myHandDeck,opHandDeck)); \r\n            setTableFlop(Flop.New(game.tableDeckSize));\r\n\r\n            if(!test)chargeBalance(-game.enterPrice);//ACCOUNT\r\n    \r\n            restartTimer(\"startRound\", 5 ,true);\r\n        }\r\n    },[myHandDeck,opHandDeck])\r\n\r\n    const handleOnAccept=(index)=>{\r\n        if(!myHandDeck){\r\n            if(balance<game.enterPrice) setTextDialog(\"Not enough money to play.\",\"\");\r\n            else IReady();\r\n        } \r\n        else setMyAcceptedIndex(index);\r\n    }\r\n\r\n    const startRound =()=>{\r\n\r\n        //pokazanie kart\r\n        if(!myFlop.isShowAll())setMyFlop(Flop.Copy(myFlop).showAll())\r\n        if(!opFlop.isShowAll() && game.type===GameType.OpenCards) setOpFlop(Flop.Copy(opFlop).showAll())\r\n\r\n        //pokazanie karty\r\n        setTableFlop(Flop.Copy(tableFlop).showNext())\r\n\r\n        //wlaczenie dotykalnosci\r\n        setIsAcceptable(true);\r\n        setIsOpAcceptable(true);\r\n\r\n        //zaczecie myslenia\r\n        simulateOp();\r\n\r\n        //end\r\n        restartTimer(\"startRoundTimer\", game.roundTime ,false);\r\n    }\r\n\r\n    const startRoundTimer = ()=>{\r\n        forceEndRound();\r\n    }\r\n\r\n    const forceEndRound=()=>{\r\n        if(!myAcceptedIndex)setMyAcceptedIndex(myHandDeck.getRandomIndex())\r\n        if(!opAcceptedIndex)setOpAcceptedIndex(opHandDeck.getRandomIndex())\r\n    }\r\n\r\n    const endRound = ()=>{\r\n        //clear opSimulation\r\n        clearInterval(opSimulation.current);\r\n\r\n        //show\r\n        setIsShow(true);\r\n\r\n        //pokazuje karty\r\n        if(game.type===GameType.HiddenCards) setOpFlop(Flop.Copy(opFlop).show(opAcceptedIndex))\r\n        \r\n        restartTimer(\"endRoundTimer\",5,true);\r\n    }\r\n\r\n    const endRoundTimer=()=>{\r\n        let round = gameStatus.length+1;//od 1 liczymy\r\n\r\n        let myCard = myHandDeck.getCard(myAcceptedIndex)\r\n        let opCard = opHandDeck.getCard(opAcceptedIndex)\r\n        let tableCard = tableDeck.getCard(round-1);\r\n\r\n        //dodaje do gameStatus\r\n        let arr = [...gameStatus];\r\n        arr.push(myCard.isCloser(opCard,tableCard));\r\n        setGameStatus(arr);\r\n\r\n        //dodaje do tableHands\r\n        arr = [...tableHands];\r\n        arr.push({up:opCard,down:myCard})\r\n        setTableHands(arr);\r\n        \r\n        //usuwa karty\r\n        setMyHandDeck(HandDeck.Copy(myHandDeck).takeOffCardByIndex(myAcceptedIndex))\r\n        setOpHandDeck(HandDeck.Copy(opHandDeck).takeOffCardByIndex(opAcceptedIndex))\r\n\r\n        //zerowanko\r\n        setMyAcceptedIndex(null);\r\n        setOpAcceptedIndex(null);\r\n        setIsShow(false);\r\n\r\n        if(round!==game.tableDeckSize) startRound();\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(isEndRound())\r\n        {\r\n            let greens = countGreens();\r\n            let price = countWinningPrice();\r\n            let delta = price - game.enterPrice;\r\n            if(delta > 0)\r\n            {\r\n                setTextDialog(\"You won\",\"GGs! (balance: \"+delta+\"$)\");\r\n                if(gameStatus.length === greens) if(!isCodeUsed(2)) saveCode(2,\"Your first all-green win! Grab a reward.\");\r\n            }\r\n            else if(delta===0)\r\n            {\r\n                setTextDialog(\"You drew\",\"Even gameplay. (balance: \"+delta+\"$)\");\r\n            }\r\n            else\r\n            {\r\n                setTextDialog(\"You lose\",\"Better luck next time... (balance: \"+delta+\"$)\");\r\n            }\r\n            \r\n            chargeXp(greens*10);\r\n            chargeBalance(price);\r\n\r\n            leaveOp();\r\n        }\r\n    },[gameStatus])\r\n\r\n    const simulateOp = ()=>{\r\n        opSimulation.current = setInterval(()=>{\r\n            let range = game.roundTime/3;\r\n            if(isEndRound()) range = 2; //! gameStatus moze nie nazyc przy 1 iteracji // is last card to accept\r\n            else if(myAcceptedIndex) range = 3;\r\n\r\n            if(getRandom(range)===1)//gdy roundtime =30 to 6s - 20s,\r\n            {\r\n                setOpAcceptedIndex(opHandDeck.getRandomIndex());\r\n                clearInterval(opSimulation.current);\r\n            }\r\n        },2000);\r\n    }\r\n    const leaveOp=()=>{\r\n        setTimeout(()=>{\r\n            setIsOpPresent(false);\r\n        },(2+getRandom(3))*1000)//2s - 4s\r\n    }\r\n\r\n    function restartTimer(handler,time,dotted){\r\n        setTimerSets({time:time,reset:true,dotted:dotted});\r\n        handleTimerEndString.current =handler;\r\n    }\r\n\r\n    const countWinningPrice = () =>{\r\n        let price = 0;\r\n        game.bids.forEach((bid,index) => {\r\n            if(gameStatus[index]) price+= bid;\r\n        });\r\n        return price;\r\n    }\r\n    const countGreens=()=>{\r\n        let cnt = 0;\r\n        gameStatus.forEach(status => {\r\n            if (status===true)cnt++;\r\n        });\r\n        return cnt;\r\n    }\r\n\r\n    function onTimerEnd(){\r\n        if(handleTimerEndString.current===\"startRoundTimer\") startRoundTimer();\r\n        else if (handleTimerEndString.current===\"endRoundTimer\")endRoundTimer();\r\n        else if (handleTimerEndString.current===\"startRound\") startRound();\r\n    }\r\n\r\n    const getShow=(my)=>{\r\n       return {index:(my?myAcceptedIndex:opAcceptedIndex),isActive:isShow,cardPreview:(my?true:(game.type!==GameType.OpenCards))}\r\n    }\r\n\r\n    const isEndRound = ()=>{\r\n        return gameStatus.length===game.tableDeckSize;\r\n    }\r\n    const getWaveCode = ()=>{\r\n        if(!tableDeck) return null;\r\n        return tableDeck.getWaveCode();\r\n    }\r\n\r\n    return ( \r\n        <div className={\"blurable \" +classNames({\"blured\":isDialog} )+\" layout\"} >\r\n\r\n            <div className={style.timer}>\r\n                <Timer sets={timerSets} onEnd={()=>onTimerEnd()}/>\r\n            </div>\r\n\r\n            <div className={style.handtable+\" fade\"}>\r\n                {isOpPresent  &&<Name bold/>}\r\n                {!isOpPresent && !isEndRound() && <div>waiting for opponent...</div> }\r\n                {!isOpPresent && isEndRound() && <div>[opponent left]</div> }\r\n                <CHand initSize={game.handDeckSize} handDeck={opHandDeck} flop={opFlop} isAcceptable={isOpAcceptable} show={getShow(false)}/>\r\n                <CTable initSize={game.tableDeckSize} tableDeck={tableDeck} flop={tableFlop} tableHands={tableHands}/>\r\n                <CMyHand initSize={game.handDeckSize} handDeck={myHandDeck} flop={myFlop} isAcceptable={isAcceptable}\r\n                    onAccept={(index)=> handleOnAccept(index)}\r\n                    show={getShow(true)}\r\n                    enterPrice={game.enterPrice}/>\r\n                <Name bold myname/>\r\n            </div>\r\n\r\n            <div className={style.wave}>\r\n                <Wave size={game.tableDeckSize} code={getWaveCode()}/>\r\n            </div>\r\n\r\n            <div className={style.sidebar } >\r\n                <h2>{game.name}</h2>\r\n                <GameStatus bids={game.bids} gameStatus={gameStatus}/>\r\n                <div className={style.info}>INFO\r\n                    <div>Nearest card wins (color matters)</div>\r\n                    <div>Drag card to switch its position</div>\r\n                    <div>TODO</div>\r\n                </div>\r\n                {isEndRound() && <div className={style.home +\" hoverable\"}>\r\n                    <Link to={{ pathname: ('/')}}>\r\n                        LEAVE\r\n                    </Link>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nexport default CGame;\r\n\r\n//local\r\n\r\nconst getWaitingTime= (playersDelta=1)=>{ //in seconds\r\n   \r\n    if(playersDelta>0)return 1+getRandom(3);//1-3s\r\n    else \r\n    {\r\n        return 2*-playersDelta +2+ getRandom(3) //max 2- 10s //max playerdelta = 3 (consts)\r\n    }\r\n}\r\n\r\nconst getRandom =(range)=>{//return number between 0 - (range-1)\r\n    return Math.floor(Math.random()*range);\r\n}","import React, { useState } from 'react'\r\n\r\nexport const DarkModeContext = React.createContext();\r\n\r\nconst DarkModeProvider = ({children})=>\r\n{\r\n    var [isDarkMode,setIsDarkMode] = useState(true);\r\n\r\n    return(\r\n        <DarkModeContext.Provider value={{isDarkMode:isDarkMode,switchDarkMode:()=>setIsDarkMode(!isDarkMode)}}>\r\n            {children}\r\n        </DarkModeContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DarkModeProvider;","import React, { useContext, useEffect, useState }  from 'react';\r\nimport { AccountContext } from '../context/AccountContext';\r\nimport { DarkModeContext } from '../context/DarkModeContext';\r\nimport './Account.css'\r\nimport { CodeContext } from '../context/CodeContext';\r\nimport { DialogContext } from '../context/DialogContext';\r\n\r\nconst test = false;\r\n\r\nconst Account = ({onCharging}) => {\r\n    //onCharging - is balance charging up - true ; is balance charging down - false ; is not charging - null ;\r\n\r\n    const {balance,xp} = useContext(AccountContext);\r\n    const {isDialog,setTextDialog} = useContext(DialogContext)\r\n    const {isCodeDialogOpen,openCodeDialog} = useContext(CodeContext);\r\n    const {switchDarkMode} = useContext(DarkModeContext);\r\n\r\n    const [currBalance,setCurrBalance] = useState(0);\r\n    const [currXp,setCurrXp] = useState(0);\r\n\r\n    const [isBalanceCharging,setIsBalanceCharging] = useState(false);\r\n    const [isXpCharging,setIsXpCharging] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        if(balance)\r\n        {\r\n            if(!test)\r\n            {\r\n                let value = balance-currBalance;\r\n                if(value===0) return;\r\n\r\n                setIsBalanceCharging(true);\r\n                onCharging(value>0);\r\n\r\n                let curr = currBalance;\r\n                const interval = setInterval(()=>{\r\n                    if(value ===0){setIsBalanceCharging(false);onCharging(null);clearInterval(interval)}\r\n        \r\n                    let delta = delting(value);\r\n                    \r\n                    curr += delta;\r\n                    setCurrBalance(curr);\r\n\r\n                    value-=delta;\r\n                },30)\r\n\r\n                return ()=> {setIsBalanceCharging(false);onCharging(null);clearInterval(interval)}\r\n            }\r\n            else setCurrBalance(balance)\r\n            \r\n        }\r\n\r\n    },[balance])\r\n\r\n    useEffect(()=>{\r\n\r\n        if(xp)\r\n        {\r\n            if(!test)\r\n            {\r\n                let value = xp-currXp;\r\n                if(value===0) return\r\n\r\n                setIsXpCharging(true);\r\n\r\n                let curr = currXp;\r\n                const interval = setInterval(()=>{\r\n                    if(value ===0) {setIsXpCharging(false);clearInterval(interval)}\r\n        \r\n                    let delta = delting(value);\r\n                    \r\n                    curr += delta;\r\n                    setCurrXp(curr);\r\n    \r\n                    value-=delta;\r\n                },30)\r\n    \r\n                return ()=> {setIsXpCharging(false);clearInterval(interval)}\r\n            }\r\n            else setCurrXp(xp);\r\n            \r\n        }\r\n        \r\n    },[xp])\r\n\r\n    const handleOpenInfoXp = ()=>{\r\n        setTextDialog(\"GGs points\",\"Gained Greens, aka XP, calculated by the number of games won * 10.\")\r\n    }\r\n    \r\n    return (\r\n    <div className=\"acc\" >\r\n        <div className='acc-box darker-color-box'>\r\n            <div style={{scale:(isXpCharging?\"1.2\":\"1\")}}>{currXp}GGs</div>\r\n            <button className={(!isDialog? 'scale-hoverable':\"\")} onClick={handleOpenInfoXp}>i </button>\r\n        </div>\r\n        \r\n        <div className='acc-box darker-color-box' >\r\n            <div style={{scale:(isBalanceCharging?\"1.2\":\"1\")}}>{currBalance}$ </div> \r\n            <button className={(!isCodeDialogOpen? 'scale-hoverable':\"\")} onClick={openCodeDialog}>+</button>\r\n        </div>\r\n        \r\n        <label className=\"switch\">\r\n            <input type=\"checkbox\" onClick={()=>switchDarkMode()} defaultChecked/>\r\n            <span className=\"slider round\"> </span>\r\n        </label>\r\n        \r\n    </div>  );\r\n}\r\n \r\nexport default Account;\r\n\r\nconst delting = (value) =>{\r\n    return value>0? Math.ceil(value/30):Math.floor(value/30);\r\n}\r\n\r\n\r\n    \r\n\r\n    ","import React, { useContext }  from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { DialogContext } from '../context/DialogContext';\r\nimport { OnlineContext } from '../context/OnlineContext';\r\nimport { GameSet } from '../models/consts';\r\nimport style from './local.css'\r\n\r\nconst WaitingRoom = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    let game = GameSet.getGame(id);\r\n\r\n    const {gamePlayers} = useContext(OnlineContext);\r\n    \r\n    const {isDialog} = useContext(DialogContext);\r\n\r\n    return ( \r\n        <div className={\"blurable \" + (isDialog?\"blured\":\"\") + \" layout\"} >\r\n            <div className={style.content}>\r\n                <div className='fade'>\r\n               \r\n                <div>Select color:</div>\r\n                <div className={style.flex}>\r\n                <div className={style.foot}>\r\n                        <div>{gamePlayers.red}</div>\r\n                        <span role=\"img\" aria-label=\"^\" >👤</span>\r\n                        <div>{gamePlayers.black}</div>\r\n                    </div>\r\n                    <div className={style.head}>\r\n                        <Link to={{ pathname: ('/game/'+game.id+\"/red\")}}>\r\n                            <span role=\"img\"aria-label=\"^\" style={{\"left\":\"10px\",\"top\":\"0px\"}}>♥️</span>\r\n                            Red\r\n                            <span role=\"img\"aria-label=\"^\" style={{\"right\":\"10px\",\"bottom\":\"0px\"}}>♦️</span>\r\n                        </Link>\r\n                        <Link to={{ pathname: ('/game/'+game.id+\"/black\")}}>\r\n                            <span role=\"img\" aria-label=\"^\" style={{\"left\":\"10px\",\"top\":\"0px\"}}>♠️</span>\r\n                            Black\r\n                            <span role=\"img\" aria-label=\"^\" style={{\"right\":\"10px\",\"bottom\":\"0px\"}}>♣️</span>\r\n                        </Link>\r\n                    </div>\r\n                \r\n                    \r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div  >\r\n                <h2>{game.name}</h2>\r\n                <div >\r\n                    <div>Enter price: {game.enterPrice}$</div>\r\n                    <div>Bids range: {game.bids[0]}$-{game.bids[game.bids.length-1]}$</div>\r\n                    <div>Game type: {game.type}</div>\r\n                    <div>Round time: {game.roundTime}s</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n\r\nexport default WaitingRoom;","import React, { useContext}  from 'react';\r\nimport { OnlineContext } from '../context/OnlineContext';\r\n\r\nconst Online = () => {\r\n\r\n    const {totalPlayers} = useContext(OnlineContext);\r\n\r\n    return (<div className=\"online-id\" >ONLINE: {totalPlayers}</div>);\r\n}\r\nexport default Online;\r\n\r\n","import React, { useContext } from 'react';\nimport Home from './p-home/Home';\nimport CGame from './p-play-room/CGame';\nimport {HashRouter as Router,Route,Routes} from 'react-router-dom'\nimport Account  from './components/Account';\nimport WaitingRoom from './p-waiting-room/WaitingRoom';\nimport Online from './components/Online'\nimport OnlineProvider from './context/OnlineContext';\nimport NotificationProvider from './context/NotificationContext';\nimport AccountProvider from './context/AccountContext';\nimport DialogProvider from './context/DialogContext';\nimport { DarkModeContext } from './context/DarkModeContext';\nimport CodeProvider from './context/CodeContext';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const {isDarkMode} = useContext(DarkModeContext);\n\n  const [navBarGold,setNavBarGold] = useState(null);//true-gold,false-red,null-default\n\n  const getNavBarClass =()=>{\n    if(navBarGold===null) return \"primary-color\";\n    return navBarGold?\"goldish-bg\":\"redish-bg\"\n  }\n\n  return (\n    \n      <div className={\"App \" +(isDarkMode?\"secondary-color\":\"third-color\")} >\n      \n      <DialogProvider>\n      <NotificationProvider>\n      <AccountProvider>\n      <CodeProvider>\n          <div className={'navbar '+getNavBarClass()}>\n            <div className='darker-color'><b>LATER <span role=\"img\" aria-label=\"dot\">🎴</span></b> the gambling game</div>\n            <Account onCharging={(val)=>{setNavBarGold(val)}}></Account>\n          </div>\n\n        <div className='content'>\n          <OnlineProvider>\n                <Router>\n                  <Routes>\n                    <Route exact path='/' element={<Home/>} />\n                    <Route exact path='/waiting-room/:id' element={<WaitingRoom/>} />\n                    <Route exact path='/game/:id/:myColor' element={<CGame/>} />\n                  </Routes>\n                </Router>\n              \n              <Online/>\n          </OnlineProvider>\n          </div>\n      </CodeProvider>\n      </AccountProvider>\n      </NotificationProvider>\n      </DialogProvider>\n      \n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport DarkModeProvider from './context/DarkModeContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <DarkModeProvider >\n      <App />\n    </DarkModeProvider>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}